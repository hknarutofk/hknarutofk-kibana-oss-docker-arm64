{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/data/public/filter/filter_manager/lib/map_range.js","dependencies":[{"path":"src/legacy/core_plugins/data/public/filter/filter_manager/lib/map_range.js","mtime":1572296409440},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLm1hcFJhbmdlID0gbWFwUmFuZ2U7Cgp2YXIgX2xvZGFzaCA9IHJlcXVpcmUoImxvZGFzaCIpOwoKdmFyIF9lcnJvcnMgPSByZXF1aXJlKCJ1aS9lcnJvcnMiKTsKCmZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsgdHJ5IHsgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOyB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlOyB9IGNhdGNoIChlcnJvcikgeyByZWplY3QoZXJyb3IpOyByZXR1cm47IH0gaWYgKGluZm8uZG9uZSkgeyByZXNvbHZlKHZhbHVlKTsgfSBlbHNlIHsgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpOyB9IH0KCmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBzZWxmID0gdGhpcywgYXJncyA9IGFyZ3VtZW50czsgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpOyBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJuZXh0IiwgdmFsdWUpOyB9IGZ1bmN0aW9uIF90aHJvdyhlcnIpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAidGhyb3ciLCBlcnIpOyB9IF9uZXh0KHVuZGVmaW5lZCk7IH0pOyB9OyB9CgpmdW5jdGlvbiBpc1NjcmlwdGVkUmFuZ2UoZmlsdGVyKSB7CiAgdmFyIHBhcmFtcyA9ICgwLCBfbG9kYXNoLmdldCkoZmlsdGVyLCBbJ3NjcmlwdCcsICdzY3JpcHQnLCAncGFyYW1zJ10pOwogIHJldHVybiBwYXJhbXMgJiYgT2JqZWN0LmtleXMocGFyYW1zKS5maW5kKGZ1bmN0aW9uIChrZXkpIHsKICAgIHJldHVybiBbJ2d0ZScsICdndCcsICdsdGUnLCAnbHQnXS5pbmNsdWRlcyhrZXkpOwogIH0pOwp9CgpmdW5jdGlvbiBnZXRQYXJhbXMoZmlsdGVyLCBpbmRleFBhdHRlcm4pIHsKICB2YXIgaXNTY3JpcHRlZFJhbmdlRmlsdGVyID0gaXNTY3JpcHRlZFJhbmdlKGZpbHRlcik7CiAgdmFyIHR5cGUgPSAncmFuZ2UnOwogIHZhciBrZXkgPSBpc1NjcmlwdGVkUmFuZ2VGaWx0ZXIgPyBmaWx0ZXIubWV0YS5maWVsZCA6IE9iamVjdC5rZXlzKGZpbHRlci5yYW5nZSlbMF07CiAgdmFyIHBhcmFtcyA9IGlzU2NyaXB0ZWRSYW5nZUZpbHRlciA/IGZpbHRlci5zY3JpcHQuc2NyaXB0LnBhcmFtcyA6IGZpbHRlci5yYW5nZVtrZXldOwogIHZhciBsZWZ0ID0gKDAsIF9sb2Rhc2guaGFzKShwYXJhbXMsICdndGUnKSA/IHBhcmFtcy5ndGUgOiBwYXJhbXMuZ3Q7CiAgaWYgKGxlZnQgPT0gbnVsbCkgbGVmdCA9IC1JbmZpbml0eTsKICB2YXIgcmlnaHQgPSAoMCwgX2xvZGFzaC5oYXMpKHBhcmFtcywgJ2x0ZScpID8gcGFyYW1zLmx0ZSA6IHBhcmFtcy5sdDsKICBpZiAocmlnaHQgPT0gbnVsbCkgcmlnaHQgPSBJbmZpbml0eTsgLy8gU29tZXRpbWVzIGEgZmlsdGVyIHdpbGwgZW5kIHVwIHdpdGggYW4gaW52YWxpZCBpbmRleCBwYXJhbS4gVGhpcyBjb3VsZCBoYXBwZW4gZm9yIGEgbG90IG9mIHJlYXNvbnMsCiAgLy8gZm9yIGV4YW1wbGUgYSB1c2VyIG1pZ2h0IG1hbnVhbGx5IGVkaXQgdGhlIHVybCBvciB0aGUgaW5kZXggcGF0dGVybidzIElEIG1pZ2h0IGNoYW5nZSBkdWUgdG8KICAvLyBleHRlcm5hbCBmYWN0b3JzIGUuZy4gYSByZWluZGV4LiBXZSBvbmx5IG5lZWQgdGhlIGluZGV4IGluIG9yZGVyIHRvIGdyYWIgdGhlIGZpZWxkIGZvcm1hdHRlciwgc28gd2UgZmFsbGJhY2sKICAvLyBvbiBkaXNwbGF5aW5nIHRoZSByYXcgdmFsdWUgaWYgdGhlIGluZGV4IGlzIGludmFsaWQuCgogIHZhciB2YWx1ZSA9ICIiLmNvbmNhdChsZWZ0LCAiIHRvICIpLmNvbmNhdChyaWdodCk7CgogIGlmIChpbmRleFBhdHRlcm4gJiYgaW5kZXhQYXR0ZXJuLmZpZWxkcy5ieU5hbWVba2V5XSkgewogICAgdmFyIGNvbnZlcnQgPSBpbmRleFBhdHRlcm4uZmllbGRzLmJ5TmFtZVtrZXldLmZvcm1hdC5nZXRDb252ZXJ0ZXJGb3IoJ3RleHQnKTsKICAgIHZhbHVlID0gIiIuY29uY2F0KGNvbnZlcnQobGVmdCksICIgdG8gIikuY29uY2F0KGNvbnZlcnQocmlnaHQpKTsKICB9CgogIHJldHVybiB7CiAgICB0eXBlOiB0eXBlLAogICAga2V5OiBrZXksCiAgICB2YWx1ZTogdmFsdWUsCiAgICBwYXJhbXM6IHBhcmFtcwogIH07Cn0KCmZ1bmN0aW9uIG1hcFJhbmdlKGluZGV4UGF0dGVybnMpIHsKICByZXR1cm4gKAogICAgLyojX19QVVJFX18qLwogICAgZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoZmlsdGVyKSB7CiAgICAgICAgdmFyIGlzU2NyaXB0ZWRSYW5nZUZpbHRlciwgaW5kZXhQYXR0ZXJuOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlzU2NyaXB0ZWRSYW5nZUZpbHRlciA9IGlzU2NyaXB0ZWRSYW5nZShmaWx0ZXIpOwoKICAgICAgICAgICAgICAgIGlmICghKCFmaWx0ZXIucmFuZ2UgJiYgIWlzU2NyaXB0ZWRSYW5nZUZpbHRlcikpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRocm93IGZpbHRlcjsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDM7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBpbmRleFBhdHRlcm5zLmdldChmaWx0ZXIubWV0YS5pbmRleCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGluZGV4UGF0dGVybiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBnZXRQYXJhbXMoZmlsdGVyLCBpbmRleFBhdHRlcm4pKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMyk7CgogICAgICAgICAgICAgICAgaWYgKCEoX2NvbnRleHQudDAgaW5zdGFuY2VvZiBfZXJyb3JzLlNhdmVkT2JqZWN0Tm90Rm91bmQpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZ2V0UGFyYW1zKGZpbHRlcikpOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgdGhyb3cgX2NvbnRleHQudDA7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzMsIDEwXV0pOwogICAgICB9KSk7CgogICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfTsKICAgIH0oKQogICk7Cn0="},null]}