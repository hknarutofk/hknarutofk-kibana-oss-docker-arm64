{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/utils/watch_stdio_for_line.js","dependencies":[{"path":"src/legacy/utils/watch_stdio_for_line.js","mtime":1572296413512},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgeyB0cnkgeyB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7IHZhciB2YWx1ZSA9IGluZm8udmFsdWU7IH0gY2F0Y2ggKGVycm9yKSB7IHJlamVjdChlcnJvcik7IHJldHVybjsgfSBpZiAoaW5mby5kb25lKSB7IHJlc29sdmUodmFsdWUpOyB9IGVsc2UgeyBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7IH0gfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7IGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7IH0gZnVuY3Rpb24gX3Rocm93KGVycikgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH0KCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy53YXRjaFN0ZGlvRm9yTGluZSA9IHdhdGNoU3RkaW9Gb3JMaW5lOwoKdmFyIF9zdHJlYW0gPSByZXF1aXJlKCJzdHJlYW0iKTsKCnZhciBfc3RyZWFtcyA9IHJlcXVpcmUoIi4vc3RyZWFtcyIpOwovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KLy8gY3JlYXRlcyBhIHN0cmVhbSB0aGF0IHNraXBzIGVtcHR5IGxpbmVzIHVubGVzcyB0aGV5IGFyZSBmb2xsb3dlZCBieQovLyBhbm90aGVyIGxpbmUsIHByZXZlbnRpbmcgdGhlIGVtcHR5IGxpbmVzIHByb2R1Y2VkIGJ5IHNwbGl0U3RyZWFtCgoKZnVuY3Rpb24gc2tpcExhc3RFbXB0eUxpbmVTdHJlYW0oKSB7CiAgdmFyIHNraXBwZWRFbXB0eUxpbmUgPSBmYWxzZTsKICByZXR1cm4gbmV3IF9zdHJlYW0uVHJhbnNmb3JtKHsKICAgIG9iamVjdE1vZGU6IHRydWUsCiAgICB0cmFuc2Zvcm06IGZ1bmN0aW9uIHRyYW5zZm9ybShsaW5lLCBlbmMsIGNiKSB7CiAgICAgIGlmIChza2lwcGVkRW1wdHlMaW5lKSB7CiAgICAgICAgdGhpcy5wdXNoKCcnKTsKICAgICAgICBza2lwcGVkRW1wdHlMaW5lID0gZmFsc2U7CiAgICAgIH0KCiAgICAgIGlmIChsaW5lID09PSAnJykgewogICAgICAgIHNraXBwZWRFbXB0eUxpbmUgPSB0cnVlOwogICAgICAgIHJldHVybiBjYigpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBjYihudWxsLCBsaW5lKTsKICAgICAgfQogICAgfQogIH0pOwp9CgpmdW5jdGlvbiB3YXRjaFN0ZGlvRm9yTGluZShfeCwgX3gyLCBfeDMpIHsKICByZXR1cm4gX3dhdGNoU3RkaW9Gb3JMaW5lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF93YXRjaFN0ZGlvRm9yTGluZSgpIHsKICBfd2F0Y2hTdGRpb0ZvckxpbmUgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShwcm9jLCBsb2dGbiwgZXhpdEFmdGVyKSB7CiAgICB2YXIgb25Mb2dMaW5lOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBvbkxvZ0xpbmUgPSBmdW5jdGlvbiBfcmVmKGxpbmUpIHsKICAgICAgICAgICAgICBsb2dGbihsaW5lKTsKCiAgICAgICAgICAgICAgaWYgKGV4aXRBZnRlciAmJiBleGl0QWZ0ZXIudGVzdChsaW5lKSkgewogICAgICAgICAgICAgICAgcHJvYy5raWxsKCdTSUdJTlQnKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFtwcm9jLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgIC8vIGlnbm9yZSB0aGUgZXJyb3IgdGhyb3duIGJ5IGV4ZWNhIGlmIGl0J3MgYmVjYXVzZSB3ZSBraWxsZWQgd2l0aCBTSUdJTlQKICAgICAgICAgICAgICBpZiAoZXJyb3Iuc2lnbmFsICE9PSAnU0lHSU5UJykgewogICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSwgKDAsIF9zdHJlYW1zLmNyZWF0ZVByb21pc2VGcm9tU3RyZWFtcykoW3Byb2Muc3Rkb3V0LCAoMCwgX3N0cmVhbXMuY3JlYXRlU3BsaXRTdHJlYW0pKCdcbicpLCBza2lwTGFzdEVtcHR5TGluZVN0cmVhbSgpLCAoMCwgX3N0cmVhbXMuY3JlYXRlTWFwU3RyZWFtKShvbkxvZ0xpbmUpXSksICgwLCBfc3RyZWFtcy5jcmVhdGVQcm9taXNlRnJvbVN0cmVhbXMpKFtwcm9jLnN0ZGVyciwgKDAsIF9zdHJlYW1zLmNyZWF0ZVNwbGl0U3RyZWFtKSgnXG4nKSwgc2tpcExhc3RFbXB0eUxpbmVTdHJlYW0oKSwgKDAsIF9zdHJlYW1zLmNyZWF0ZU1hcFN0cmVhbSkob25Mb2dMaW5lKV0pXSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKICByZXR1cm4gX3dhdGNoU3RkaW9Gb3JMaW5lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},null]}