{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/timelion/public/timelion_vis_fn.js","dependencies":[{"path":"src/legacy/core_plugins/timelion/public/timelion_vis_fn.js","mtime":1572296411364},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnRpbWVsaW9uVmlzID0gdm9pZCAwOwoKdmFyIF9yZWdpc3RyaWVzID0gcmVxdWlyZSgicGx1Z2lucy9pbnRlcnByZXRlci9yZWdpc3RyaWVzIik7Cgp2YXIgX2xvZGFzaCA9IHJlcXVpcmUoImxvZGFzaCIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX3RpbWVsaW9uX3JlcXVlc3RfaGFuZGxlciA9IHJlcXVpcmUoIi4vdmlzL3RpbWVsaW9uX3JlcXVlc3RfaGFuZGxlciIpOwoKdmFyIF9jaHJvbWUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInVpL2Nocm9tZSIpKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgpmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7IHRyeSB7IHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTsgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsgfSBjYXRjaCAoZXJyb3IpIHsgcmVqZWN0KGVycm9yKTsgcmV0dXJuOyB9IGlmIChpbmZvLmRvbmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0gZWxzZSB7IFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsgfSB9CgpmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgc2VsZiA9IHRoaXMsIGFyZ3MgPSBhcmd1bWVudHM7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsgZnVuY3Rpb24gX25leHQodmFsdWUpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAibmV4dCIsIHZhbHVlKTsgfSBmdW5jdGlvbiBfdGhyb3coZXJyKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgInRocm93IiwgZXJyKTsgfSBfbmV4dCh1bmRlZmluZWQpOyB9KTsgfTsgfQoKdmFyIHRpbWVsaW9uVmlzID0gZnVuY3Rpb24gdGltZWxpb25WaXMoKSB7CiAgcmV0dXJuIHsKICAgIG5hbWU6ICd0aW1lbGlvbl92aXMnLAogICAgdHlwZTogJ3JlbmRlcicsCiAgICBjb250ZXh0OiB7CiAgICAgIHR5cGVzOiBbJ2tpYmFuYV9jb250ZXh0JywgJ251bGwnXQogICAgfSwKICAgIGhlbHA6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd0aW1lbGlvbi5mdW5jdGlvbi5oZWxwJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ1RpbWVsaW9uIHZpc3VhbGl6YXRpb24nCiAgICB9KSwKICAgIGFyZ3M6IHsKICAgICAgZXhwcmVzc2lvbjogewogICAgICAgIHR5cGVzOiBbJ3N0cmluZyddLAogICAgICAgIGFsaWFzZXM6IFsnXyddLAogICAgICAgIGRlZmF1bHQ6ICciLmVzKCopIicKICAgICAgfSwKICAgICAgaW50ZXJ2YWw6IHsKICAgICAgICB0eXBlczogWydzdHJpbmcnLCAnbnVsbCddLAogICAgICAgIGRlZmF1bHQ6ICdhdXRvJwogICAgICB9CiAgICB9LAogICAgZm46IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9mbiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoY29udGV4dCwgYXJncykgewogICAgICAgIHZhciAkaW5qZWN0b3IsIFByaXZhdGUsIHRpbWVsaW9uUmVxdWVzdEhhbmRsZXIsIHZpc1BhcmFtcywgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX2Nocm9tZS5kZWZhdWx0LmRhbmdlcm91c2x5R2V0QWN0aXZlSW5qZWN0b3IoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgJGluamVjdG9yID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIFByaXZhdGUgPSAkaW5qZWN0b3IuZ2V0KCdQcml2YXRlJyk7CiAgICAgICAgICAgICAgICB0aW1lbGlvblJlcXVlc3RIYW5kbGVyID0gUHJpdmF0ZShfdGltZWxpb25fcmVxdWVzdF9oYW5kbGVyLlRpbWVsaW9uUmVxdWVzdEhhbmRsZXJQcm92aWRlcikuaGFuZGxlcjsKICAgICAgICAgICAgICAgIHZpc1BhcmFtcyA9IHsKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogYXJncy5leHByZXNzaW9uLAogICAgICAgICAgICAgICAgICBpbnRlcnZhbDogYXJncy5pbnRlcnZhbAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIHRpbWVsaW9uUmVxdWVzdEhhbmRsZXIoewogICAgICAgICAgICAgICAgICB0aW1lUmFuZ2U6ICgwLCBfbG9kYXNoLmdldCkoY29udGV4dCwgJ3RpbWVSYW5nZScsIG51bGwpLAogICAgICAgICAgICAgICAgICBxdWVyeTogKDAsIF9sb2Rhc2guZ2V0KShjb250ZXh0LCAncXVlcnknLCBudWxsKSwKICAgICAgICAgICAgICAgICAgZmlsdGVyczogKDAsIF9sb2Rhc2guZ2V0KShjb250ZXh0LCAnZmlsdGVycycsIG51bGwpLAogICAgICAgICAgICAgICAgICBmb3JjZUZldGNoOiB0cnVlLAogICAgICAgICAgICAgICAgICB2aXNQYXJhbXM6IHZpc1BhcmFtcwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJlc3BvbnNlLnZpc1R5cGUgPSAndGltZWxpb24nOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgewogICAgICAgICAgICAgICAgICB0eXBlOiAncmVuZGVyJywKICAgICAgICAgICAgICAgICAgYXM6ICd2aXN1YWxpemF0aW9uJywKICAgICAgICAgICAgICAgICAgdmFsdWU6IHsKICAgICAgICAgICAgICAgICAgICB2aXNQYXJhbXM6IHZpc1BhcmFtcywKICAgICAgICAgICAgICAgICAgICB2aXNUeXBlOiAndGltZWxpb24nLAogICAgICAgICAgICAgICAgICAgIHZpc0RhdGE6IHJlc3BvbnNlCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGZuKF94LCBfeDIpIHsKICAgICAgICByZXR1cm4gX2ZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmbjsKICAgIH0oKQogIH07Cn07CgpleHBvcnRzLnRpbWVsaW9uVmlzID0gdGltZWxpb25WaXM7CgpfcmVnaXN0cmllcy5mdW5jdGlvbnNSZWdpc3RyeS5yZWdpc3Rlcih0aW1lbGlvblZpcyk7"},null]}