{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/utils/streams/replace_stream.js","dependencies":[{"path":"src/legacy/utils/streams/replace_stream.js","mtime":1572296413532},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgeyB0cnkgeyB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7IHZhciB2YWx1ZSA9IGluZm8udmFsdWU7IH0gY2F0Y2ggKGVycm9yKSB7IHJlamVjdChlcnJvcik7IHJldHVybjsgfSBpZiAoaW5mby5kb25lKSB7IHJlc29sdmUodmFsdWUpOyB9IGVsc2UgeyBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7IH0gfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7IGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7IH0gZnVuY3Rpb24gX3Rocm93KGVycikgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH0KCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5jcmVhdGVSZXBsYWNlU3RyZWFtID0gY3JlYXRlUmVwbGFjZVN0cmVhbTsKCnZhciBfc3RyZWFtID0gcmVxdWlyZSgic3RyZWFtIik7Ci8qCiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvcgogKiBsaWNlbnNlIGFncmVlbWVudHMuIFNlZSB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aAogKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodAogKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyCiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5b3UgbWF5CiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAogKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgogKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKICogdW5kZXIgdGhlIExpY2Vuc2UuCiAqLwoKCmZ1bmN0aW9uIGNyZWF0ZVJlcGxhY2VTdHJlYW0odG9SZXBsYWNlLCByZXBsYWNlbWVudCkgewogIGlmICh0eXBlb2YgdG9SZXBsYWNlICE9PSAnc3RyaW5nJykgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndG9SZXBsYWNlIG11c3QgYmUgYSBzdHJpbmcnKTsKICB9CgogIHZhciBidWZmZXIgPSBCdWZmZXIuYWxsb2MoMCk7CiAgcmV0dXJuIG5ldyBfc3RyZWFtLlRyYW5zZm9ybSh7CiAgICBvYmplY3RNb2RlOiBmYWxzZSwKICAgIHRyYW5zZm9ybTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3RyYW5zZm9ybSA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodmFsdWUsIGVuYywgZG9uZSkgewogICAgICAgIHZhciBpbmRleDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIGJ1ZmZlciA9IEJ1ZmZlci5jb25jYXQoW2J1ZmZlciwgdmFsdWVdLCBidWZmZXIubGVuZ3RoICsgdmFsdWUubGVuZ3RoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgaWYgKCF0cnVlKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gdHJ5IHRvIGZpbmQgdGhlIG5leHQgaW5zdGFuY2Ugb2YgYHRvUmVwbGFjZWAgaW4gYnVmZmVyCiAgICAgICAgICAgICAgICBpbmRleCA9IGJ1ZmZlci5pbmRleE9mKHRvUmVwbGFjZSk7IC8vIGlmIHRoZXJlIGlzIG5vIG5leHQgaW5zdGFuY2UsIGJyZWFrCgogICAgICAgICAgICAgICAgaWYgKCEoaW5kZXggPT09IC0xKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgiYnJlYWsiLCAxMSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIC8vIGZsdXNoIGV2ZXJ5dGhpbmcgdG8gdGhlIGxlZnQgb2YgdGhlIG5leHQgaW5zdGFuY2UKICAgICAgICAgICAgICAgIC8vIG9mIGB0b1JlcGxhY2VgCiAgICAgICAgICAgICAgICB0aGlzLnB1c2goYnVmZmVyLnNsaWNlKDAsIGluZGV4KSk7IC8vIHRoZW4gZmx1c2ggYW4gaW5zdGFuY2Ugb2YgYHJlcGxhY2VtZW50YAoKICAgICAgICAgICAgICAgIHRoaXMucHVzaChyZXBsYWNlbWVudCk7IC8vIGFuZCBmaW5hbGx5IHVwZGF0ZSB0aGUgYnVmZmVyIHRvIGluY2x1ZGUgZXZlcnl0aGluZwogICAgICAgICAgICAgICAgLy8gdG8gdGhlIHJpZ2h0IG9mIGB0b1JlcGxhY2VgLCBkcm9wcGluZyB0byByZXBsYWNlIGZyb20gdGhlIGJ1ZmZlcgoKICAgICAgICAgICAgICAgIGJ1ZmZlciA9IGJ1ZmZlci5zbGljZShpbmRleCArIHRvUmVwbGFjZS5sZW5ndGgpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIC8vIHVudGlsIG5vdyB3ZSBoYXZlIG9ubHkgZmx1c2hlZCBkYXRhIHRoYXQgaXMgdG8gdGhlIGxlZnQKICAgICAgICAgICAgICAgIC8vIG9mIGEgZGlzY292ZXJlZCBpbnN0YW5jZSBvZiBgdG9SZXBsYWNlYC4gSWYgYHRvUmVwbGFjZWAgaXMKICAgICAgICAgICAgICAgIC8vIG5ldmVyIGZvdW5kIHRoaXMgd291bGQgbGVhZCB0byB1cyBidWZmZXJpbmcgdGhlIGVudGlyZSBzdHJlYW0uCiAgICAgICAgICAgICAgICAvLwogICAgICAgICAgICAgICAgLy8gSW5zdGVhZCwgd2Ugb25seSBrZWVwIGVub3VnaCBidWZmZXIgdG8gY29tcGxldGUgYSBwb3RlbnRpYWxseQogICAgICAgICAgICAgICAgLy8gcGFydGlhbCBpbnN0YW5jZSBvZiBgdG9SZXBsYWNlYAogICAgICAgICAgICAgICAgaWYgKGJ1ZmZlci5sZW5ndGggPiB0b1JlcGxhY2UubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgIC8vIHRoZSBlbnRpcmUgYnVmZmVyIGV4Y2VwdCB0aGUgbGFzdCBgdG9SZXBsYWNlLmxlbmd0aGAgYnl0ZXMKICAgICAgICAgICAgICAgICAgLy8gc28gdGhhdCBpZiBhbGwgYnV0IG9uZSBieXRlIGZyb20gYHRvUmVwbGFjZWAgaXMgaW4gdGhlIGJ1ZmZlciwKICAgICAgICAgICAgICAgICAgLy8gYW5kIHRoZSBuZXh0IGNodW5rIGRlbGl2ZXJzIHRoZSBuZWNlc3NhcnkgYnl0ZSwgdGhlIGJ1ZmZlciB3aWxsIHRoZW4KICAgICAgICAgICAgICAgICAgLy8gY29udGFpbiBhIGNvbXBsZXRlIGB0b1JlcGxhY2VgIHRva2VuLgogICAgICAgICAgICAgICAgICB0aGlzLnB1c2goYnVmZmVyLnNsaWNlKDAsIGJ1ZmZlci5sZW5ndGggLSB0b1JlcGxhY2UubGVuZ3RoKSk7CiAgICAgICAgICAgICAgICAgIGJ1ZmZlciA9IGJ1ZmZlci5zbGljZSgtdG9SZXBsYWNlLmxlbmd0aCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgZG9uZSgpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE4OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTU7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgZG9uZShfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzLCBbWzAsIDE1XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiB0cmFuc2Zvcm0oX3gsIF94MiwgX3gzKSB7CiAgICAgICAgcmV0dXJuIF90cmFuc2Zvcm0uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRyYW5zZm9ybTsKICAgIH0oKSwKICAgIGZsdXNoOiBmdW5jdGlvbiBmbHVzaChjYWxsYmFjaykgewogICAgICBpZiAoYnVmZmVyLmxlbmd0aCkgewogICAgICAgIHRoaXMucHVzaChidWZmZXIpOwogICAgICB9CgogICAgICBidWZmZXIgPSBudWxsOwogICAgICBjYWxsYmFjaygpOwogICAgfQogIH0pOwp9"},null]}