{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/kbn_top_nav/kbn_top_nav.js","dependencies":[{"path":"src/legacy/ui/public/kbn_top_nav/kbn_top_nav.js","mtime":1572296412792},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgibmdyZWFjdCIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgidWkvaTE4biIpOwoKdmFyIF9tb2R1bGVzID0gcmVxdWlyZSgidWkvbW9kdWxlcyIpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi9jb3JlX3BsdWdpbnMva2liYW5hX3JlYWN0L3B1YmxpYyIpOwoKdmFyIF9zdG9yYWdlID0gcmVxdWlyZSgidWkvc3RvcmFnZSIpOwoKdmFyIF9jaHJvbWUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInVpL2Nocm9tZSIpKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KdmFyIF9tb2R1bGUgPSBfbW9kdWxlcy51aU1vZHVsZXMuZ2V0KCdraWJhbmEnKTsKCl9tb2R1bGUuZGlyZWN0aXZlKCdrYm5Ub3BOYXYnLCBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIHsKICAgIHJlc3RyaWN0OiAnRScsCiAgICB0ZW1wbGF0ZTogJycsCiAgICBjb21waWxlOiBmdW5jdGlvbiBjb21waWxlKGVsZW0pIHsKICAgICAgdmFyIGNoaWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgna2JuLXRvcC1uYXYtaGVscGVyJyk7IC8vIENvcHkgYXR0cmlidXRlcyB0byB0aGUgY2hpbGQgZGlyZWN0aXZlCgogICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlOwogICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogICAgICB0cnkgewogICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGVsZW1bMF0uYXR0cmlidXRlc1tTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSAoX3N0ZXAgPSBfaXRlcmF0b3IubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWUpIHsKICAgICAgICAgIHZhciBhdHRyID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICBjaGlsZC5zZXRBdHRyaWJ1dGUoYXR0ci5uYW1lLCBhdHRyLnZhbHVlKTsKICAgICAgICB9IC8vIEFkZCBhIHNwZWNpYWwgYXR0cmlidXRlIHRoYXQgd2lsbCBjaGFuZ2UgZXZlcnkgdGltZSB0aGF0IG9uZQogICAgICAgIC8vIG9mIHRoZSBjb25maWcgYXJyYXkncyBkaXNhYmxlQnV0dG9uIGZ1bmN0aW9uIHJldHVybiB2YWx1ZSBjaGFuZ2VzLgoKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlOwogICAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIHRyeSB7CiAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybiAhPSBudWxsKSB7CiAgICAgICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTsKICAgICAgICAgIH0KICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7CiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgY2hpbGQuc2V0QXR0cmlidXRlKCdkaXNhYmxlZC1idXR0b25zJywgJ2Rpc2FibGVkQnV0dG9ucycpOyAvLyBQYXNzIGluIHN0b3JhZ2UKCiAgICAgIHZhciBsb2NhbFN0b3JhZ2UgPSBuZXcgX3N0b3JhZ2UuU3RvcmFnZSh3aW5kb3cubG9jYWxTdG9yYWdlKTsKICAgICAgY2hpbGQuc2V0QXR0cmlidXRlKCdzdG9yZScsICdzdG9yZScpOwogICAgICBjaGlsZC5zZXRBdHRyaWJ1dGUoJ3VpLXNldHRpbmdzJywgJ3VpU2V0dGluZ3MnKTsKICAgICAgY2hpbGQuc2V0QXR0cmlidXRlKCdzYXZlZC1vYmplY3RzLWNsaWVudCcsICdzYXZlZE9iamVjdHNDbGllbnQnKTsgLy8gQXBwZW5kIGhlbHBlciBkaXJlY3RpdmUKCiAgICAgIGVsZW0uYXBwZW5kKGNoaWxkKTsKCiAgICAgIHZhciBsaW5rRm4gPSBmdW5jdGlvbiBsaW5rRm4oJHNjb3BlLCBfLCAkYXR0cikgewogICAgICAgICRzY29wZS5zdG9yZSA9IGxvY2FsU3RvcmFnZTsKICAgICAgICAkc2NvcGUudWlTZXR0aW5ncyA9IF9jaHJvbWUuZGVmYXVsdC5nZXRVaVNldHRpbmdzQ2xpZW50KCk7CiAgICAgICAgJHNjb3BlLnNhdmVkT2JqZWN0c0NsaWVudCA9IF9jaHJvbWUuZGVmYXVsdC5nZXRTYXZlZE9iamVjdHNDbGllbnQoKTsgLy8gV2F0Y2ggY29uZmlnIGNoYW5nZXMKCiAgICAgICAgJHNjb3BlLiR3YXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICB2YXIgY29uZmlnID0gJHNjb3BlLiRldmFsKCRhdHRyLmNvbmZpZykgfHwgW107CiAgICAgICAgICByZXR1cm4gY29uZmlnLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAvLyBDb3B5IGtleSBpbnRvIGlkLCBhcyBpdCdzIGEgcmVzZXJ2ZWQgcmVhY3QgcHJvcGVyeS4KICAgICAgICAgICAgLy8gVGhpcyBpcyBkb25lIGZvciBBbmd1bGFyIGRpcmVjdGl2ZSBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LgogICAgICAgICAgICAvLyBJbiBSZWFjdCBvbmx5IGlkIGlzIHJlY29nbml6ZWQuCiAgICAgICAgICAgIGlmIChpdGVtLmtleSAmJiAhaXRlbS5pZCkgewogICAgICAgICAgICAgIGl0ZW0uaWQgPSBpdGVtLmtleTsKICAgICAgICAgICAgfSAvLyBXYXRjaCB0aGUgZGlzYWJsZUJ1dHRvbiBmdW5jdGlvbnMKCgogICAgICAgICAgICBpZiAodHlwZW9mIGl0ZW0uZGlzYWJsZUJ1dHRvbiA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgICAgIHJldHVybiBpdGVtLmRpc2FibGVCdXR0b24oKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIGl0ZW0uZGlzYWJsZUJ1dHRvbjsKICAgICAgICAgIH0pOwogICAgICAgIH0sIGZ1bmN0aW9uIChuZXdWYWwpIHsKICAgICAgICAgICRzY29wZS5kaXNhYmxlZEJ1dHRvbnMgPSBuZXdWYWw7CiAgICAgICAgfSwgdHJ1ZSk7CiAgICAgIH07CgogICAgICByZXR1cm4gbGlua0ZuOwogICAgfQogIH07Cn0pOwoKX21vZHVsZS5kaXJlY3RpdmUoJ2tiblRvcE5hdkhlbHBlcicsIGZ1bmN0aW9uIChyZWFjdERpcmVjdGl2ZSkgewogIHJldHVybiByZWFjdERpcmVjdGl2ZSgoMCwgX2kxOG4ud3JhcEluSTE4bkNvbnRleHQpKF9wdWJsaWMuVG9wTmF2TWVudSksIFtbJ25hbWUnLCB7CiAgICB3YXRjaERlcHRoOiAncmVmZXJlbmNlJwogIH1dLCBbJ2NvbmZpZycsIHsKICAgIHdhdGNoRGVwdGg6ICd2YWx1ZScKICB9XSwgWydkaXNhYmxlZEJ1dHRvbnMnLCB7CiAgICB3YXRjaERlcHRoOiAncmVmZXJlbmNlJwogIH1dLCBbJ3F1ZXJ5JywgewogICAgd2F0Y2hEZXB0aDogJ3JlZmVyZW5jZScKICB9XSwgWydzYXZlZFF1ZXJ5JywgewogICAgd2F0Y2hEZXB0aDogJ3JlZmVyZW5jZScKICB9XSwgWydzdG9yZScsIHsKICAgIHdhdGNoRGVwdGg6ICdyZWZlcmVuY2UnCiAgfV0sIFsndWlTZXR0aW5ncycsIHsKICAgIHdhdGNoRGVwdGg6ICdyZWZlcmVuY2UnCiAgfV0sIFsnc2F2ZWRPYmplY3RzQ2xpZW50JywgewogICAgd2F0Y2hEZXB0aDogJ3JlZmVyZW5jZScKICB9XSwgWydpbnRsJywgewogICAgd2F0Y2hEZXB0aDogJ3JlZmVyZW5jZScKICB9XSwgWydzdG9yZScsIHsKICAgIHdhdGNoRGVwdGg6ICdyZWZlcmVuY2UnCiAgfV0sIFsnb25RdWVyeVN1Ym1pdCcsIHsKICAgIHdhdGNoRGVwdGg6ICdyZWZlcmVuY2UnCiAgfV0sIFsnb25GaWx0ZXJzVXBkYXRlZCcsIHsKICAgIHdhdGNoRGVwdGg6ICdyZWZlcmVuY2UnCiAgfV0sIFsnb25SZWZyZXNoQ2hhbmdlJywgewogICAgd2F0Y2hEZXB0aDogJ3JlZmVyZW5jZScKICB9XSwgWydvbkNsZWFyU2F2ZWRRdWVyeScsIHsKICAgIHdhdGNoRGVwdGg6ICdyZWZlcmVuY2UnCiAgfV0sIFsnb25TYXZlZCcsIHsKICAgIHdhdGNoRGVwdGg6ICdyZWZlcmVuY2UnCiAgfV0sIFsnb25TYXZlZFF1ZXJ5VXBkYXRlZCcsIHsKICAgIHdhdGNoRGVwdGg6ICdyZWZlcmVuY2UnCiAgfV0sIFsnaW5kZXhQYXR0ZXJucycsIHsKICAgIHdhdGNoRGVwdGg6ICdjb2xsZWN0aW9uJwogIH1dLCBbJ2ZpbHRlcnMnLCB7CiAgICB3YXRjaERlcHRoOiAnY29sbGVjdGlvbicKICB9XSwgLy8gQWxsIG1vZGlmaWVycyBkZWZhdWx0IHRvIHRydWUuCiAgLy8gU2V0IHRvIGZhbHNlIHRvIGhpZGUgc3ViY29tcG9uZW50cy4KICAnc2hvd1NlYXJjaEJhcicsICdzaG93RmlsdGVyQmFyJywgJ3Nob3dRdWVyeUJhcicsICdzaG93UXVlcnlJbnB1dCcsICdzaG93RGF0ZVBpY2tlcicsICdzaG93U2F2ZVF1ZXJ5JywgJ2FwcE5hbWUnLCAnc2NyZWVuVGl0bGUnLCAnZGF0ZVJhbmdlRnJvbScsICdkYXRlUmFuZ2VUbycsICdpc1JlZnJlc2hQYXVzZWQnLCAncmVmcmVzaEludGVydmFsJywgJ2Rpc2FibGVBdXRvRm9jdXMnLCAnc2hvd0F1dG9SZWZyZXNoT25seSddKTsKfSk7"},null]}