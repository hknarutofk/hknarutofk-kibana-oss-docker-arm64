{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/kibana/public/discover/components/field_chooser/discover_field.js","dependencies":[{"path":"src/legacy/core_plugins/kibana/public/discover/components/field_chooser/discover_field.js","mtime":1572296410120},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9qcXVlcnkgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImpxdWVyeSIpKTsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9kaXNjb3Zlcl9maWVsZCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9kaXNjb3Zlcl9maWVsZC5odG1sIikpOwoKdmFyIF9sb2Rhc2ggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImxvZGFzaCIpKTsKCnJlcXVpcmUoInVpL2RpcmVjdGl2ZXMvY3NzX3RydW5jYXRlIik7CgpyZXF1aXJlKCJ1aS9kaXJlY3RpdmVzL2ZpZWxkX25hbWUiKTsKCnJlcXVpcmUoIi4vc3RyaW5nX3Byb2dyZXNzX2JhciIpOwoKdmFyIF9zdHJpbmcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vbGliL2RldGFpbF92aWV3cy9zdHJpbmcuaHRtbCIpKTsKCnZhciBfY2FwYWJpbGl0aWVzID0gcmVxdWlyZSgidWkvY2FwYWJpbGl0aWVzIik7Cgp2YXIgX21vZHVsZXMgPSByZXF1aXJlKCJ1aS9tb2R1bGVzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCnZhciBhcHAgPSBfbW9kdWxlcy51aU1vZHVsZXMuZ2V0KCdhcHBzL2Rpc2NvdmVyJyk7CgphcHAuZGlyZWN0aXZlKCdkaXNjb3ZlckZpZWxkJywgZnVuY3Rpb24gKCRjb21waWxlKSB7CiAgcmV0dXJuIHsKICAgIHJlc3RyaWN0OiAnRScsCiAgICB0ZW1wbGF0ZTogX2Rpc2NvdmVyX2ZpZWxkLmRlZmF1bHQsCiAgICByZXBsYWNlOiB0cnVlLAogICAgc2NvcGU6IHsKICAgICAgZmllbGQ6ICc9JywKICAgICAgb25BZGRGaWVsZDogJz0nLAogICAgICBvbkFkZEZpbHRlcjogJz0nLAogICAgICBvblJlbW92ZUZpZWxkOiAnPScsCiAgICAgIG9uU2hvd0RldGFpbHM6ICc9JwogICAgfSwKICAgIGxpbms6IGZ1bmN0aW9uIGxpbmsoJHNjb3BlLCAkZWxlbSkgewogICAgICB2YXIgZGV0YWlsc0VsZW07CiAgICAgIHZhciBkZXRhaWxTY29wZTsKCiAgICAgIHZhciBpbml0ID0gZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgICBpZiAoJHNjb3BlLmZpZWxkLmRldGFpbHMpIHsKICAgICAgICAgICRzY29wZS50b2dnbGVEZXRhaWxzKCRzY29wZS5maWVsZCwgdHJ1ZSk7CiAgICAgICAgfQoKICAgICAgICAkc2NvcGUuYWRkUmVtb3ZlQnV0dG9uTGFiZWwgPSAkc2NvcGUuZmllbGQuZGlzcGxheSA/IF9pMThuLmkxOG4udHJhbnNsYXRlKCdrYm4uZGlzY292ZXIuZmllbGRDaG9vc2VyLmRpc2NvdmVyRmllbGQucmVtb3ZlQnV0dG9uTGFiZWwnLCB7CiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ3JlbW92ZScKICAgICAgICB9KSA6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdrYm4uZGlzY292ZXIuZmllbGRDaG9vc2VyLmRpc2NvdmVyRmllbGQuYWRkQnV0dG9uTGFiZWwnLCB7CiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ2FkZCcKICAgICAgICB9KTsKICAgICAgfTsKCiAgICAgIHZhciBnZXRXYXJuaW5ncyA9IGZ1bmN0aW9uIGdldFdhcm5pbmdzKGZpZWxkKSB7CiAgICAgICAgdmFyIHdhcm5pbmdzID0gW107CgogICAgICAgIGlmIChmaWVsZC5zY3JpcHRlZCkgewogICAgICAgICAgd2FybmluZ3MucHVzaChfaTE4bi5pMThuLnRyYW5zbGF0ZSgna2JuLmRpc2NvdmVyLmZpZWxkQ2hvb3Nlci5kaXNjb3ZlckZpZWxkLnNjcmlwdGVkRmllbGRzVGFrZUxvbmdFeGVjdXRlRGVzY3JpcHRpb24nLCB7CiAgICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnU2NyaXB0ZWQgZmllbGRzIGNhbiB0YWtlIGEgbG9uZyB0aW1lIHRvIGV4ZWN1dGUuJwogICAgICAgICAgfSkpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHdhcm5pbmdzLmxlbmd0aCA+IDEpIHsKICAgICAgICAgIHdhcm5pbmdzID0gd2FybmluZ3MubWFwKGZ1bmN0aW9uICh3YXJuaW5nLCBpKSB7CiAgICAgICAgICAgIHJldHVybiAoaSA+IDAgPyAnXG4nIDogJycpICsgKGkgKyAxKSArICcgLSAnICsgd2FybmluZzsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHdhcm5pbmdzOwogICAgICB9OwoKICAgICAgJHNjb3BlLmNhblZpc3VhbGl6ZSA9IF9jYXBhYmlsaXRpZXMuY2FwYWJpbGl0aWVzLmdldCgpLnZpc3VhbGl6ZS5zaG93OwoKICAgICAgJHNjb3BlLnRvZ2dsZURpc3BsYXkgPSBmdW5jdGlvbiAoZmllbGQpIHsKICAgICAgICBpZiAoZmllbGQuZGlzcGxheSkgewogICAgICAgICAgJHNjb3BlLm9uUmVtb3ZlRmllbGQoZmllbGQubmFtZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICRzY29wZS5vbkFkZEZpZWxkKGZpZWxkLm5hbWUpOwogICAgICAgIH0KCiAgICAgICAgaWYgKGZpZWxkLmRldGFpbHMpIHsKICAgICAgICAgICRzY29wZS50b2dnbGVEZXRhaWxzKGZpZWxkKTsKICAgICAgICB9CiAgICAgIH07CgogICAgICAkc2NvcGUub25DbGlja1RvZ2dsZURldGFpbHMgPSBmdW5jdGlvbiBvbkNsaWNrVG9nZ2xlRGV0YWlscygkZXZlbnQsIGZpZWxkKSB7CiAgICAgICAgLy8gRG8gbm90aGluZyBpZiB0aGUgZXZlbnQgb3JpZ2luYXRlZCBmcm9tIGEgY2hpbGQuCiAgICAgICAgaWYgKCRldmVudC5jdXJyZW50VGFyZ2V0ICE9PSAkZXZlbnQudGFyZ2V0KSB7CiAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9CgogICAgICAgICRzY29wZS50b2dnbGVEZXRhaWxzKGZpZWxkKTsKICAgICAgfTsKCiAgICAgICRzY29wZS50b2dnbGVEZXRhaWxzID0gZnVuY3Rpb24gKGZpZWxkLCByZWNvbXB1dGUpIHsKICAgICAgICBpZiAoX2xvZGFzaC5kZWZhdWx0LmlzVW5kZWZpbmVkKGZpZWxkLmRldGFpbHMpIHx8IHJlY29tcHV0ZSkgewogICAgICAgICAgJHNjb3BlLm9uU2hvd0RldGFpbHMoZmllbGQsIHJlY29tcHV0ZSk7CiAgICAgICAgICBkZXRhaWxTY29wZSA9ICRzY29wZS4kbmV3KCk7CiAgICAgICAgICBkZXRhaWxTY29wZS53YXJuaW5ncyA9IGdldFdhcm5pbmdzKGZpZWxkKTsKCiAgICAgICAgICBkZXRhaWxTY29wZS5nZXRCdWNrZXRBcmlhTGFiZWwgPSBmdW5jdGlvbiAoYnVja2V0KSB7CiAgICAgICAgICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgna2JuLmRpc2NvdmVyLmZpZWxkQ2hvb3Nlci5kaXNjb3ZlckZpZWxkLmJ1Y2tldEFyaWFMYWJlbCcsIHsKICAgICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ1ZhbHVlOiB7dmFsdWV9JywKICAgICAgICAgICAgICB2YWx1ZXM6IHsKICAgICAgICAgICAgICAgIHZhbHVlOiBidWNrZXQuZGlzcGxheSA9PT0gJycgPyBfaTE4bi5pMThuLnRyYW5zbGF0ZSgna2JuLmRpc2NvdmVyLmZpZWxkQ2hvb3Nlci5kaXNjb3ZlckZpZWxkLmVtcHR5U3RyaW5nVGV4dCcsIHsKICAgICAgICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdFbXB0eSBzdHJpbmcnCiAgICAgICAgICAgICAgICB9KSA6IGJ1Y2tldC5kaXNwbGF5CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH07CgogICAgICAgICAgZGV0YWlsc0VsZW0gPSAoMCwgX2pxdWVyeS5kZWZhdWx0KShfc3RyaW5nLmRlZmF1bHQpOwogICAgICAgICAgJGNvbXBpbGUoZGV0YWlsc0VsZW0pKGRldGFpbFNjb3BlKTsKICAgICAgICAgICRlbGVtLmFwcGVuZChkZXRhaWxzRWxlbSkuYWRkQ2xhc3MoJ2FjdGl2ZScpOwogICAgICAgICAgJGVsZW0uZmluZCgnLmRzY1NpZGViYXJJdGVtJykuYWRkQ2xhc3MoJ2RzY1NpZGViYXJJdGVtLS1hY3RpdmUnKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgZGVsZXRlIGZpZWxkLmRldGFpbHM7CiAgICAgICAgICBkZXRhaWxTY29wZS4kZGVzdHJveSgpOwogICAgICAgICAgZGV0YWlsc0VsZW0ucmVtb3ZlKCk7CiAgICAgICAgICAkZWxlbS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7CiAgICAgICAgICAkZWxlbS5maW5kKCcuZHNjU2lkZWJhckl0ZW0nKS5yZW1vdmVDbGFzcygnZHNjU2lkZWJhckl0ZW0tLWFjdGl2ZScpOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIGluaXQoKTsKICAgIH0KICB9Owp9KTs="},null]}