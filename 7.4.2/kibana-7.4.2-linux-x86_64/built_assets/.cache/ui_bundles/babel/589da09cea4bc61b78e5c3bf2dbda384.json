{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/agg_types/buckets/date_histogram.js","dependencies":[{"path":"src/legacy/ui/public/agg_types/buckets/date_histogram.js","mtime":1572296412176},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnNldEJvdW5kcyA9IHNldEJvdW5kczsKZXhwb3J0cy5kYXRlSGlzdG9ncmFtQnVja2V0QWdnID0gdm9pZCAwOwoKdmFyIF9sb2Rhc2ggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImxvZGFzaCIpKTsKCnZhciBfY2hyb21lID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuLi8uLi9jaHJvbWUiKSk7Cgp2YXIgX21vbWVudFRpbWV6b25lID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJtb21lbnQtdGltZXpvbmUiKSk7Cgp2YXIgX2J1Y2tldF9hZ2dfdHlwZSA9IHJlcXVpcmUoIi4vX2J1Y2tldF9hZ2dfdHlwZSIpOwoKdmFyIF90aW1lX2J1Y2tldHMgPSByZXF1aXJlKCIuLi8uLi90aW1lX2J1Y2tldHMiKTsKCnZhciBfZGF0ZV9oaXN0b2dyYW0gPSByZXF1aXJlKCIuL2NyZWF0ZV9maWx0ZXIvZGF0ZV9oaXN0b2dyYW0iKTsKCnZhciBfaW50ZXJ2YWxfb3B0aW9ucyA9IHJlcXVpcmUoIi4vX2ludGVydmFsX29wdGlvbnMiKTsKCnZhciBfdGltZV9pbnRlcnZhbCA9IHJlcXVpcmUoIi4uL2NvbnRyb2xzL3RpbWVfaW50ZXJ2YWwiKTsKCnZhciBfdGltZWZpbHRlciA9IHJlcXVpcmUoIi4uLy4uL3RpbWVmaWx0ZXIiKTsKCnZhciBfZHJvcF9wYXJ0aWFscyA9IHJlcXVpcmUoIi4uL2NvbnRyb2xzL2Ryb3BfcGFydGlhbHMiKTsKCnZhciBfcHVibGljID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vY29yZV9wbHVnaW5zL2RhdGEvcHVibGljIik7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9Cgp2YXIgY29uZmlnID0gX2Nocm9tZS5kZWZhdWx0LmdldFVpU2V0dGluZ3NDbGllbnQoKTsKCnZhciBkZXRlY3RlZFRpbWV6b25lID0gX21vbWVudFRpbWV6b25lLmRlZmF1bHQudHouZ3Vlc3MoKTsKCnZhciB0ek9mZnNldCA9ICgwLCBfbW9tZW50VGltZXpvbmUuZGVmYXVsdCkoKS5mb3JtYXQoJ1onKTsKCmZ1bmN0aW9uIGdldEludGVydmFsKGFnZykgewogIHJldHVybiBfbG9kYXNoLmRlZmF1bHQuZ2V0KGFnZywgWydwYXJhbXMnLCAnaW50ZXJ2YWwnXSk7Cn0KCmZ1bmN0aW9uIHNldEJvdW5kcyhhZ2csIGZvcmNlKSB7CiAgaWYgKGFnZy5idWNrZXRzLl9hbHJlYWR5U2V0ICYmICFmb3JjZSkgcmV0dXJuOwogIGFnZy5idWNrZXRzLl9hbHJlYWR5U2V0ID0gdHJ1ZTsKICB2YXIgYm91bmRzID0gYWdnLnBhcmFtcy50aW1lUmFuZ2UgPyBfdGltZWZpbHRlci50aW1lZmlsdGVyLmNhbGN1bGF0ZUJvdW5kcyhhZ2cucGFyYW1zLnRpbWVSYW5nZSkgOiBudWxsOwogIGFnZy5idWNrZXRzLnNldEJvdW5kcyhhZ2cuZmllbGRJc1RpbWVGaWVsZCgpICYmIGJvdW5kcyk7Cn0KCnZhciBkYXRlSGlzdG9ncmFtQnVja2V0QWdnID0gbmV3IF9idWNrZXRfYWdnX3R5cGUuQnVja2V0QWdnVHlwZSh7CiAgbmFtZTogJ2RhdGVfaGlzdG9ncmFtJywKICB0aXRsZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvbW1vbi51aS5hZ2dUeXBlcy5idWNrZXRzLmRhdGVIaXN0b2dyYW1UaXRsZScsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnRGF0ZSBIaXN0b2dyYW0nCiAgfSksCiAgb3JkZXJlZDogewogICAgZGF0ZTogdHJ1ZQogIH0sCiAgbWFrZUxhYmVsOiBmdW5jdGlvbiBtYWtlTGFiZWwoYWdnKSB7CiAgICB2YXIgb3V0cHV0ID0gdGhpcy5wYXJhbXMud3JpdGUoYWdnKTsKICAgIHZhciBmaWVsZCA9IGFnZy5nZXRGaWVsZERpc3BsYXlOYW1lKCk7CiAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvbW1vbi51aS5hZ2dUeXBlcy5idWNrZXRzLmRhdGVIaXN0b2dyYW1MYWJlbCcsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICd7ZmllbGROYW1lfSBwZXIge2ludGVydmFsRGVzY3JpcHRpb259JywKICAgICAgdmFsdWVzOiB7CiAgICAgICAgZmllbGROYW1lOiBmaWVsZCwKICAgICAgICBpbnRlcnZhbERlc2NyaXB0aW9uOiBvdXRwdXQubWV0cmljU2NhbGVUZXh0IHx8IG91dHB1dC5idWNrZXRJbnRlcnZhbC5kZXNjcmlwdGlvbgogICAgICB9CiAgICB9KTsKICB9LAogIGNyZWF0ZUZpbHRlcjogX2RhdGVfaGlzdG9ncmFtLmNyZWF0ZUZpbHRlckRhdGVIaXN0b2dyYW0sCiAgZGVjb3JhdGVBZ2dDb25maWc6IGZ1bmN0aW9uIGRlY29yYXRlQWdnQ29uZmlnKCkgewogICAgdmFyIGJ1Y2tldHM7CiAgICByZXR1cm4gewogICAgICBidWNrZXRzOiB7CiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgICAgaWYgKGJ1Y2tldHMpIHJldHVybiBidWNrZXRzOwogICAgICAgICAgYnVja2V0cyA9IG5ldyBfdGltZV9idWNrZXRzLlRpbWVCdWNrZXRzKCk7CiAgICAgICAgICBidWNrZXRzLnNldEludGVydmFsKGdldEludGVydmFsKHRoaXMpKTsKICAgICAgICAgIHNldEJvdW5kcyh0aGlzKTsKICAgICAgICAgIHJldHVybiBidWNrZXRzOwogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAogIGdldEZvcm1hdDogZnVuY3Rpb24gZ2V0Rm9ybWF0KGFnZykgewogICAgcmV0dXJuIGFnZy5idWNrZXRzLmdldFNjYWxlZERhdGVGb3JtYXR0ZXIoKTsKICB9LAogIHBhcmFtczogW3sKICAgIG5hbWU6ICdmaWVsZCcsCiAgICB0eXBlOiAnZmllbGQnLAogICAgZmlsdGVyRmllbGRUeXBlczogJ2RhdGUnLAogICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoYWdnKSB7CiAgICAgIHJldHVybiBhZ2cuZ2V0SW5kZXhQYXR0ZXJuKCkudGltZUZpZWxkTmFtZTsKICAgIH0sCiAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UoYWdnKSB7CiAgICAgIGlmIChfbG9kYXNoLmRlZmF1bHQuZ2V0KGFnZywgJ3BhcmFtcy5pbnRlcnZhbCcpID09PSAnYXV0bycgJiYgIWFnZy5maWVsZElzVGltZUZpZWxkKCkpIHsKICAgICAgICBkZWxldGUgYWdnLnBhcmFtcy5pbnRlcnZhbDsKICAgICAgfQoKICAgICAgc2V0Qm91bmRzKGFnZywgdHJ1ZSk7CiAgICB9CiAgfSwgewogICAgbmFtZTogJ3RpbWVSYW5nZScsCiAgICBkZWZhdWx0OiBudWxsLAogICAgd3JpdGU6IF9sb2Rhc2guZGVmYXVsdC5ub29wCiAgfSwgewogICAgbmFtZTogJ3VzZU5vcm1hbGl6ZWRFc0ludGVydmFsJywKICAgIGRlZmF1bHQ6IHRydWUsCiAgICB3cml0ZTogX2xvZGFzaC5kZWZhdWx0Lm5vb3AKICB9LCB7CiAgICBuYW1lOiAnaW50ZXJ2YWwnLAogICAgZWRpdG9yQ29tcG9uZW50OiBfdGltZV9pbnRlcnZhbC5UaW1lSW50ZXJ2YWxQYXJhbUVkaXRvciwKICAgIGRlc2VyaWFsaXplOiBmdW5jdGlvbiBkZXNlcmlhbGl6ZShzdGF0ZSwgYWdnKSB7CiAgICAgIC8vIEZvciB1cGdyYWRpbmcgZnJvbSA3LjAueCB0byA3LjEueCAtIGludGVydmFscyBhcmUgbm93IHN0b3JlZCBhcyBrZXkgb2Ygb3B0aW9ucyBvciBjdXN0b20gdmFsdWUKICAgICAgaWYgKHN0YXRlID09PSAnY3VzdG9tJykgewogICAgICAgIHJldHVybiBfbG9kYXNoLmRlZmF1bHQuZ2V0KGFnZywgJ3BhcmFtcy5jdXN0b21JbnRlcnZhbCcpOwogICAgICB9CgogICAgICB2YXIgaW50ZXJ2YWwgPSBfbG9kYXNoLmRlZmF1bHQuZmluZChfaW50ZXJ2YWxfb3B0aW9ucy5pbnRlcnZhbE9wdGlvbnMsIHsKICAgICAgICB2YWw6IHN0YXRlCiAgICAgIH0pOyAvLyBGb3IgdXBncmFkaW5nIGZyb20gNC4wLnggdG8gNC4xLnggLSBpbnRlcnZhbHMgYXJlIG5vdyBzdG9yZWQgYXMgJ3knIGluc3RlYWQgb2YgJ3llYXInLAogICAgICAvLyBidXQgdGhpcyBtYXBzIHRoZSBvbGQgdmFsdWVzIHRvIHRoZSBuZXcgdmFsdWVzCgoKICAgICAgaWYgKCFpbnRlcnZhbCAmJiBzdGF0ZSA9PT0gJ3llYXInKSB7CiAgICAgICAgcmV0dXJuICd5JzsKICAgICAgfQoKICAgICAgcmV0dXJuIHN0YXRlOwogICAgfSwKICAgIGRlZmF1bHQ6ICdhdXRvJywKICAgIG9wdGlvbnM6IF9pbnRlcnZhbF9vcHRpb25zLmludGVydmFsT3B0aW9ucywKICAgIG1vZGlmeUFnZ0NvbmZpZ09uU2VhcmNoUmVxdWVzdFN0YXJ0OiBmdW5jdGlvbiBtb2RpZnlBZ2dDb25maWdPblNlYXJjaFJlcXVlc3RTdGFydChhZ2cpIHsKICAgICAgc2V0Qm91bmRzKGFnZywgdHJ1ZSk7CiAgICB9LAogICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKGFnZywgb3V0cHV0LCBhZ2dzKSB7CiAgICAgIHNldEJvdW5kcyhhZ2csIHRydWUpOwogICAgICBhZ2cuYnVja2V0cy5zZXRJbnRlcnZhbChnZXRJbnRlcnZhbChhZ2cpKTsKICAgICAgdmFyIHVzZU5vcm1hbGl6ZWRFc0ludGVydmFsID0gYWdnLnBhcmFtcy51c2VOb3JtYWxpemVkRXNJbnRlcnZhbDsKICAgICAgdmFyIGludGVydmFsID0gYWdnLmJ1Y2tldHMuZ2V0SW50ZXJ2YWwodXNlTm9ybWFsaXplZEVzSW50ZXJ2YWwpOwogICAgICBvdXRwdXQuYnVja2V0SW50ZXJ2YWwgPSBpbnRlcnZhbDsKCiAgICAgIGlmIChpbnRlcnZhbC5leHByZXNzaW9uID09PSAnMG1zJykgewogICAgICAgIC8vIFdlIGFyZSBoaXR0aW5nIHRoaXMgY29kZSBhIGNvdXBsZSBvZiB0aW1lcyB3aGlsZSBjb25maWd1cmluZyBpbiBlZGl0b3IKICAgICAgICAvLyB3aXRoIGFuIGludGVydmFsIG9mIDBtcyBiZWNhdXNlIHRoZSBvdmVyYWxsIHRpbWUgcmFuZ2UgaGFzIG5vdCB5ZXQgYmVlbgogICAgICAgIC8vIHNldC4gU2luY2UgMG1zIGlzIG5vdCBhIHZhbGlkIEVTIGludGVydmFsLCB3ZSBjYW5ub3QgcGFzcyBpdCB0aHJvdWdoIGRhdGVIaXN0b2dyYW1JbnRlcnZhbAogICAgICAgIC8vIGJlbG93LCBzaW5jZSBpdCB3b3VsZCB0aHJvdyBhbiBleGNlcHRpb24uIFNvIGluIHRoZSBjYXNlcyB3ZSBzdGlsbCBoYXZlIGFuIGludGVydmFsIG9mIDBtcwogICAgICAgIC8vIGhlcmUgd2Ugc2ltcGx5IHNraXAgdGhlIHJlc3Qgb2YgdGhlIG1ldGhvZCBhbmQgbmV2ZXIgd3JpdGUgYW4gaW50ZXJ2YWwgaW50byB0aGUgRFNMLCBzaW5jZQogICAgICAgIC8vIHRoaXMgRFNMIHdpbGwgYW55d2F5IG5vdCBiZSB1c2VkIGJlZm9yZSB3ZSdyZSBwYXNzaW5nIHRoaXMgY29kZSB3aXRoIGFuIGFjdHVhbCBpbnRlcnZhbC4KICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIG91dHB1dC5wYXJhbXMgPSBfb2JqZWN0U3ByZWFkKHt9LCBvdXRwdXQucGFyYW1zLCB7fSwgKDAsIF9wdWJsaWMuZGF0ZUhpc3RvZ3JhbUludGVydmFsKShpbnRlcnZhbC5leHByZXNzaW9uKSk7CiAgICAgIHZhciBzY2FsZU1ldHJpY3MgPSBpbnRlcnZhbC5zY2FsZWQgJiYgaW50ZXJ2YWwuc2NhbGUgPCAxOwoKICAgICAgaWYgKHNjYWxlTWV0cmljcyAmJiBhZ2dzKSB7CiAgICAgICAgdmFyIG1ldHJpY3MgPSBhZ2dzLmZpbHRlcihmdW5jdGlvbiAoYWdnKSB7CiAgICAgICAgICByZXR1cm4gYWdnLnR5cGUgJiYgYWdnLnR5cGUudHlwZSA9PT0gJ21ldHJpY3MnOwogICAgICAgIH0pOwoKICAgICAgICB2YXIgYWxsID0gX2xvZGFzaC5kZWZhdWx0LmV2ZXJ5KG1ldHJpY3MsIGZ1bmN0aW9uIChhZ2cpIHsKICAgICAgICAgIHJldHVybiBhZ2cudHlwZS5pc1NjYWxhYmxlKCk7CiAgICAgICAgfSk7CgogICAgICAgIGlmIChhbGwpIHsKICAgICAgICAgIG91dHB1dC5tZXRyaWNTY2FsZSA9IGludGVydmFsLnNjYWxlOwogICAgICAgICAgb3V0cHV0Lm1ldHJpY1NjYWxlVGV4dCA9IGludGVydmFsLnByZVNjYWxlZC5kZXNjcmlwdGlvbjsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBuYW1lOiAndGltZV96b25lJywKICAgIGRlZmF1bHQ6IHVuZGVmaW5lZCwKICAgIC8vIFdlIGRvbid0IGV2ZXIgd2FudCB0aGlzIHBhcmFtZXRlciB0byBiZSBzZXJpYWxpemVkIG91dCAod2hlbiBzYXZpbmcgb3IgdG8gVVJMcykKICAgIC8vIHNpbmNlIHdlIGRvIGFsbCB0aGUgbG9naWMgaGFuZGxpbmcgaXQgIm9uIHRoZSBmbHkiIGluIHRoZSBgd3JpdGVgIG1ldGhvZCwgdG8gcHJldmVudAogICAgLy8gdGltZV96b25lcyBiZWluZyBwZXJzaXN0ZWQgaW50byBzYXZlZF9vYmplY3RzCiAgICBzZXJpYWxpemU6IGZ1bmN0aW9uIHNlcmlhbGl6ZSgpIHsKICAgICAgcmV0dXJuIHVuZGVmaW5lZDsKICAgIH0sCiAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUoYWdnLCBvdXRwdXQpIHsKICAgICAgLy8gSWYgYSB0aW1lX3pvbmUgaGFzIGJlZW4gc2V0IGV4cGxpY2l0bHkgYWx3YXlzIHByZWZlciB0aGlzLgogICAgICB2YXIgdHogPSBhZ2cucGFyYW1zLnRpbWVfem9uZTsKCiAgICAgIGlmICghdHogJiYgYWdnLnBhcmFtcy5maWVsZCkgewogICAgICAgIC8vIElmIGEgZmllbGQgaGFzIGJlZW4gY29uZmlndXJlZCBjaGVjayB0aGUgaW5kZXggcGF0dGVybidzIHR5cGVNZXRhIGlmIGEgZGF0ZV9oaXN0b2dyYW0gb24gdGhhdAogICAgICAgIC8vIGZpZWxkIHJlcXVpcmVzIGEgc3BlY2lmaWMgdGltZV96b25lCiAgICAgICAgdHogPSBfbG9kYXNoLmRlZmF1bHQuZ2V0KGFnZy5nZXRJbmRleFBhdHRlcm4oKSwgWyd0eXBlTWV0YScsICdhZ2dzJywgJ2RhdGVfaGlzdG9ncmFtJywgYWdnLnBhcmFtcy5maWVsZC5uYW1lLCAndGltZV96b25lJ10pOwogICAgICB9CgogICAgICBpZiAoIXR6KSB7CiAgICAgICAgLy8gSWYgdGhlIGluZGV4IHBhdHRlcm4gdHlwZU1ldGEgZGF0YSwgZGlkbid0IGhhZCBhIHRpbWUgem9uZSBhc3NpZ25lZCBmb3IgdGhlIHNlbGVjdGVkIGZpZWxkIHVzZSB0aGUgY29uZmlndXJlZCB0egogICAgICAgIHZhciBpc0RlZmF1bHRUaW1lem9uZSA9IGNvbmZpZy5pc0RlZmF1bHQoJ2RhdGVGb3JtYXQ6dHonKTsKICAgICAgICB0eiA9IGlzRGVmYXVsdFRpbWV6b25lID8gZGV0ZWN0ZWRUaW1lem9uZSB8fCB0ek9mZnNldCA6IGNvbmZpZy5nZXQoJ2RhdGVGb3JtYXQ6dHonKTsKICAgICAgfQoKICAgICAgb3V0cHV0LnBhcmFtcy50aW1lX3pvbmUgPSB0ejsKICAgIH0KICB9LCB7CiAgICBuYW1lOiAnZHJvcF9wYXJ0aWFscycsCiAgICBkZWZhdWx0OiBmYWxzZSwKICAgIHdyaXRlOiBfbG9kYXNoLmRlZmF1bHQubm9vcCwKICAgIGVkaXRvckNvbXBvbmVudDogX2Ryb3BfcGFydGlhbHMuRHJvcFBhcnRpYWxzUGFyYW1FZGl0b3IsCiAgICBzaG91bGRTaG93OiBmdW5jdGlvbiBzaG91bGRTaG93KGFnZykgewogICAgICB2YXIgZmllbGQgPSBhZ2cucGFyYW1zLmZpZWxkOwogICAgICByZXR1cm4gZmllbGQgJiYgZmllbGQubmFtZSAmJiBmaWVsZC5uYW1lID09PSBhZ2cuZ2V0SW5kZXhQYXR0ZXJuKCkudGltZUZpZWxkTmFtZTsKICAgIH0KICB9LCB7CiAgICBuYW1lOiAnZm9ybWF0JwogIH0sIHsKICAgIG5hbWU6ICdtaW5fZG9jX2NvdW50JywKICAgIGRlZmF1bHQ6IDEKICB9LCB7CiAgICBuYW1lOiAnZXh0ZW5kZWRfYm91bmRzJywKICAgIGRlZmF1bHQ6IHt9LAogICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKGFnZywgb3V0cHV0KSB7CiAgICAgIHZhciB2YWwgPSBhZ2cucGFyYW1zLmV4dGVuZGVkX2JvdW5kczsKCiAgICAgIGlmICh2YWwubWluICE9IG51bGwgfHwgdmFsLm1heCAhPSBudWxsKSB7CiAgICAgICAgb3V0cHV0LnBhcmFtcy5leHRlbmRlZF9ib3VuZHMgPSB7CiAgICAgICAgICBtaW46ICgwLCBfbW9tZW50VGltZXpvbmUuZGVmYXVsdCkodmFsLm1pbikudmFsdWVPZigpLAogICAgICAgICAgbWF4OiAoMCwgX21vbWVudFRpbWV6b25lLmRlZmF1bHQpKHZhbC5tYXgpLnZhbHVlT2YoKQogICAgICAgIH07CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICB9CiAgfV0KfSk7CmV4cG9ydHMuZGF0ZUhpc3RvZ3JhbUJ1Y2tldEFnZyA9IGRhdGVIaXN0b2dyYW1CdWNrZXRBZ2c7"},null]}