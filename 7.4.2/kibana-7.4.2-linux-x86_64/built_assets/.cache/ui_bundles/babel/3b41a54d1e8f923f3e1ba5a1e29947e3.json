{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/data/public/query/query_bar/lib/fetch_index_patterns.js","dependencies":[{"path":"src/legacy/core_plugins/data/public/query/query_bar/lib/fetch_index_patterns.js","mtime":1572296409508},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmZldGNoSW5kZXhQYXR0ZXJucyA9IGZldGNoSW5kZXhQYXR0ZXJuczsKCnZhciBfbG9kYXNoID0gcmVxdWlyZSgibG9kYXNoIik7Cgp2YXIgX2luZGV4X3BhdHRlcm5zID0gcmVxdWlyZSgiLi4vLi4vLi4vaW5kZXhfcGF0dGVybnMiKTsKCmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsKICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7CiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSAiW29iamVjdCBBcmd1bWVudHNdIikgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7CiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICBhcnIyW2ldID0gYXJyW2ldOwogICAgfQoKICAgIHJldHVybiBhcnIyOwogIH0KfQoKZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgewogIHRyeSB7CiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7CiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICByZWplY3QoZXJyb3IpOwogICAgcmV0dXJuOwogIH0KCiAgaWYgKGluZm8uZG9uZSkgewogICAgcmVzb2x2ZSh2YWx1ZSk7CiAgfSBlbHNlIHsKICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsKICB9Cn0KCmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7CiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBzZWxmID0gdGhpcywKICAgICAgICBhcmdzID0gYXJndW1lbnRzOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpOwoKICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHsKICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJuZXh0IiwgdmFsdWUpOwogICAgICB9CgogICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAidGhyb3ciLCBlcnIpOwogICAgICB9CgogICAgICBfbmV4dCh1bmRlZmluZWQpOwogICAgfSk7CiAgfTsKfQoKZnVuY3Rpb24gZmV0Y2hJbmRleFBhdHRlcm5zKF94LCBfeDIsIF94MykgewogIHJldHVybiBfZmV0Y2hJbmRleFBhdHRlcm5zLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9mZXRjaEluZGV4UGF0dGVybnMoKSB7CiAgX2ZldGNoSW5kZXhQYXR0ZXJucyA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHNhdmVkT2JqZWN0c0NsaWVudCwgaW5kZXhQYXR0ZXJuU3RyaW5ncywgdWlTZXR0aW5ncykgewogICAgdmFyIHNlYXJjaFN0cmluZywgaW5kZXhQYXR0ZXJuc0Zyb21TYXZlZE9iamVjdHMsIGV4YWN0TWF0Y2hlcywgZGVmYXVsdEluZGV4LCBhbGxNYXRjaGVzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBpZiAoISghaW5kZXhQYXR0ZXJuU3RyaW5ncyB8fCAoMCwgX2xvZGFzaC5pc0VtcHR5KShpbmRleFBhdHRlcm5TdHJpbmdzKSkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgW10pOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgc2VhcmNoU3RyaW5nID0gaW5kZXhQYXR0ZXJuU3RyaW5ncy5tYXAoZnVuY3Rpb24gKHN0cmluZykgewogICAgICAgICAgICAgIHJldHVybiAiXCIiLmNvbmNhdChzdHJpbmcsICJcIiIpOwogICAgICAgICAgICB9KS5qb2luKCcgfCAnKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBzYXZlZE9iamVjdHNDbGllbnQuZmluZCh7CiAgICAgICAgICAgICAgdHlwZTogJ2luZGV4LXBhdHRlcm4nLAogICAgICAgICAgICAgIGZpZWxkczogWyd0aXRsZScsICdmaWVsZHMnXSwKICAgICAgICAgICAgICBzZWFyY2g6IHNlYXJjaFN0cmluZywKICAgICAgICAgICAgICBzZWFyY2hGaWVsZHM6IFsndGl0bGUnXQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGluZGV4UGF0dGVybnNGcm9tU2F2ZWRPYmplY3RzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgZXhhY3RNYXRjaGVzID0gaW5kZXhQYXR0ZXJuc0Zyb21TYXZlZE9iamVjdHMuc2F2ZWRPYmplY3RzLmZpbHRlcihmdW5jdGlvbiAoc2F2ZWRPYmplY3QpIHsKICAgICAgICAgICAgICByZXR1cm4gaW5kZXhQYXR0ZXJuU3RyaW5ncy5pbmNsdWRlcyhzYXZlZE9iamVjdC5hdHRyaWJ1dGVzLnRpdGxlKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGRlZmF1bHRJbmRleCA9IHVpU2V0dGluZ3MuZ2V0KCdkZWZhdWx0SW5kZXgnKTsKCiAgICAgICAgICAgIGlmICghKGV4YWN0TWF0Y2hlcy5sZW5ndGggPT09IGluZGV4UGF0dGVyblN0cmluZ3MubGVuZ3RoKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBleGFjdE1hdGNoZXM7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgX2NvbnRleHQudDEgPSBbXTsKICAgICAgICAgICAgX2NvbnRleHQudDIgPSBfdG9Db25zdW1hYmxlQXJyYXkoZXhhY3RNYXRjaGVzKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICByZXR1cm4gc2F2ZWRPYmplY3RzQ2xpZW50LmdldCgnaW5kZXgtcGF0dGVybicsIGRlZmF1bHRJbmRleCk7CgogICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgX2NvbnRleHQudDMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC50NCA9IFtfY29udGV4dC50M107CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHQudDEuY29uY2F0LmNhbGwoX2NvbnRleHQudDEsIF9jb250ZXh0LnQyLCBfY29udGV4dC50NCk7CgogICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgYWxsTWF0Y2hlcyA9IF9jb250ZXh0LnQwOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBhbGxNYXRjaGVzLm1hcChfaW5kZXhfcGF0dGVybnMuZ2V0RnJvbVNhdmVkT2JqZWN0KSk7CgogICAgICAgICAgY2FzZSAyMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9mZXRjaEluZGV4UGF0dGVybnMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQ=="},null]}