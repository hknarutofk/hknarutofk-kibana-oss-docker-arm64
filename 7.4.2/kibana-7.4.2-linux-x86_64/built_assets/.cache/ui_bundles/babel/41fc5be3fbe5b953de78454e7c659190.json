{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/agg_types/controls/metric_agg.js","dependencies":[{"path":"src/legacy/ui/public/agg_types/controls/metric_agg.js","mtime":1572296412204},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLk1ldHJpY0FnZ1BhcmFtRWRpdG9yID0gTWV0cmljQWdnUGFyYW1FZGl0b3I7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX2FnZ191dGlscyA9IHJlcXVpcmUoIi4uL2FnZ191dGlscyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9Ci8qCiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvcgogKiBsaWNlbnNlIGFncmVlbWVudHMuIFNlZSB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aAogKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodAogKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyCiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5b3UgbWF5CiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAogKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgogKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKICogdW5kZXIgdGhlIExpY2Vuc2UuCiAqLwoKCnZhciBhZ2dGaWx0ZXIgPSBbJyF0b3BfaGl0cycsICchcGVyY2VudGlsZXMnLCAnIXBlcmNlbnRpbGVfcmFua3MnLCAnIW1lZGlhbicsICchc3RkX2RldiddOwp2YXIgaXNDb21wYXRpYmxlQWdnID0gKDAsIF9hZ2dfdXRpbHMuaXNDb21wYXRpYmxlQWdncmVnYXRpb24pKGFnZ0ZpbHRlcik7CnZhciBFTVBUWV9WQUxVRSA9ICdFTVBUWV9WQUxVRSc7CgpmdW5jdGlvbiBNZXRyaWNBZ2dQYXJhbUVkaXRvcihfcmVmKSB7CiAgdmFyIGFnZyA9IF9yZWYuYWdnLAogICAgICB2YWx1ZSA9IF9yZWYudmFsdWUsCiAgICAgIHNob3dWYWxpZGF0aW9uID0gX3JlZi5zaG93VmFsaWRhdGlvbiwKICAgICAgc2V0VmFsdWUgPSBfcmVmLnNldFZhbHVlLAogICAgICBzZXRWYWxpZGl0eSA9IF9yZWYuc2V0VmFsaWRpdHksCiAgICAgIHNldFRvdWNoZWQgPSBfcmVmLnNldFRvdWNoZWQsCiAgICAgIG1ldHJpY0FnZ3MgPSBfcmVmLm1ldHJpY0FnZ3M7CgogIHZhciBsYWJlbCA9IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb21tb24udWkuYWdnVHlwZXMubWV0cmljTGFiZWwnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ01ldHJpYycKICB9KTsKCiAgdmFyIGlzVmFsaWQgPSAhIXZhbHVlOwogICgwLCBfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7CiAgICBzZXRWYWxpZGl0eShpc1ZhbGlkKTsKICB9LCBbaXNWYWxpZF0pOwogICgwLCBfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7CiAgICBpZiAobWV0cmljQWdncyAmJiB2YWx1ZSAmJiB2YWx1ZSAhPT0gJ2N1c3RvbScpIHsKICAgICAgLy8gZW5zdXJlIHRoYXQgbWV0cmljQWdnIGlzIHNldCB0byBhIHZhbGlkIGFnZwogICAgICB2YXIgcmVzcEFnZyA9IG1ldHJpY0FnZ3MuZmlsdGVyKGlzQ29tcGF0aWJsZUFnZykuZmluZChmdW5jdGlvbiAoYWdncmVnYXRpb24pIHsKICAgICAgICByZXR1cm4gYWdncmVnYXRpb24uaWQgPT09IHZhbHVlOwogICAgICB9KTsKCiAgICAgIGlmICghcmVzcEFnZykgewogICAgICAgIHNldFZhbHVlKCk7CiAgICAgIH0KICAgIH0KICB9LCBbbWV0cmljQWdnc10pOwogIHZhciBvcHRpb25zID0gbWV0cmljQWdncyA/IG1ldHJpY0FnZ3MuZmlsdGVyKGZ1bmN0aW9uIChyZXNwQWdnKSB7CiAgICByZXR1cm4gcmVzcEFnZy50eXBlLm5hbWUgIT09IGFnZy50eXBlLm5hbWU7CiAgfSkubWFwKGZ1bmN0aW9uIChyZXNwQWdnKSB7CiAgICByZXR1cm4gewogICAgICB0ZXh0OiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29tbW9uLnVpLmFnZ1R5cGVzLmRlZmluaXRlTWV0cmljTGFiZWwnLCB7CiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdNZXRyaWM6IHtzYWZlTWFrZUxhYmVsfScsCiAgICAgICAgdmFsdWVzOiB7CiAgICAgICAgICBzYWZlTWFrZUxhYmVsOiAoMCwgX2FnZ191dGlscy5zYWZlTWFrZUxhYmVsKShyZXNwQWdnKQogICAgICAgIH0KICAgICAgfSksCiAgICAgIHZhbHVlOiByZXNwQWdnLmlkLAogICAgICBkaXNhYmxlZDogIWlzQ29tcGF0aWJsZUFnZyhyZXNwQWdnKQogICAgfTsKICB9KSA6IFtdOwogIG9wdGlvbnMucHVzaCh7CiAgICB0ZXh0OiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29tbW9uLnVpLmFnZ1R5cGVzLmN1c3RvbU1ldHJpY0xhYmVsJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ0N1c3RvbSBtZXRyaWMnCiAgICB9KSwKICAgIHZhbHVlOiAnY3VzdG9tJywKICAgIGRpc2FibGVkOiBmYWxzZQogIH0pOwoKICBpZiAoIXZhbHVlKSB7CiAgICBvcHRpb25zLnVuc2hpZnQoewogICAgICB0ZXh0OiAnJywKICAgICAgdmFsdWU6IEVNUFRZX1ZBTFVFLAogICAgICBkaXNhYmxlZDogZmFsc2UKICAgIH0pOwogIH0KCiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGb3JtUm93LCB7CiAgICBsYWJlbDogbGFiZWwsCiAgICBmdWxsV2lkdGg6IHRydWUsCiAgICBpc0ludmFsaWQ6IHNob3dWYWxpZGF0aW9uID8gIWlzVmFsaWQgOiBmYWxzZSwKICAgIGNvbXByZXNzZWQ6IHRydWUKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU2VsZWN0LCB7CiAgICBvcHRpb25zOiBvcHRpb25zLAogICAgdmFsdWU6IHZhbHVlIHx8IEVNUFRZX1ZBTFVFLAogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGV2KSB7CiAgICAgIHJldHVybiBzZXRWYWx1ZShldi50YXJnZXQudmFsdWUpOwogICAgfSwKICAgIGZ1bGxXaWR0aDogdHJ1ZSwKICAgIGlzSW52YWxpZDogc2hvd1ZhbGlkYXRpb24gPyAhaXNWYWxpZCA6IGZhbHNlLAogICAgb25CbHVyOiBzZXRUb3VjaGVkLAogICAgImRhdGEtdGVzdC1zdWJqIjogInZpc0VkaXRvclN1YkFnZ01ldHJpYyIuY29uY2F0KGFnZy5pZCkKICB9KSk7Cn0="},null]}