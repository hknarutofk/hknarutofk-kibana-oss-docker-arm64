{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/inspector/public/views/requests/components/requests_view.js","dependencies":[{"path":"src/plugins/inspector/public/views/requests/components/requests_view.js","mtime":1572296413624},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YyID0gZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mMiA9IGZ1bmN0aW9uIF90eXBlb2YyKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mMihvYmopOyB9CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuUmVxdWVzdHNWaWV3Q29tcG9uZW50ID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9wcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInByb3AtdHlwZXMiKSk7Cgp2YXIgX3JlYWN0MiA9IHJlcXVpcmUoIkBrYm4vaTE4bi9yZWFjdCIpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfYWRhcHRlcnMgPSByZXF1aXJlKCIuLi8uLi8uLi9hZGFwdGVycyIpOwoKdmFyIF9yZXF1ZXN0X3NlbGVjdG9yID0gcmVxdWlyZSgiLi9yZXF1ZXN0X3NlbGVjdG9yIik7Cgp2YXIgX3JlcXVlc3RfZGV0YWlscyA9IHJlcXVpcmUoIi4vcmVxdWVzdF9kZXRhaWxzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7CiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgX3R5cGVvZjIoU3ltYm9sLml0ZXJhdG9yKSA9PT0gInN5bWJvbCIpIHsKICAgIF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgewogICAgICByZXR1cm4gX3R5cGVvZjIob2JqKTsKICAgIH07CiAgfSBlbHNlIHsKICAgIF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgewogICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiBfdHlwZW9mMihvYmopOwogICAgfTsKICB9CgogIHJldHVybiBfdHlwZW9mKG9iaik7Cn0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsKICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7CiAgfQp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7CiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgewogICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsKICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsKICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsKICAgIGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOwogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOwogIH0KfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgewogIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOwogIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsKICByZXR1cm4gQ29uc3RydWN0b3I7Cn0KCmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsKICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpKSB7CiAgICByZXR1cm4gY2FsbDsKICB9CgogIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOwp9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgewogIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7CiAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOwogIH07CiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsKfQoKZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7CiAgaWYgKHNlbGYgPT09IHZvaWQgMCkgewogICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsKICB9CgogIHJldHVybiBzZWxmOwp9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsKICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsKICB9CgogIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgewogICAgY29uc3RydWN0b3I6IHsKICAgICAgdmFsdWU6IHN1YkNsYXNzLAogICAgICB3cml0YWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9CiAgfSk7CiAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7Cn0KCmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7CiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7CiAgICBvLl9fcHJvdG9fXyA9IHA7CiAgICByZXR1cm4gbzsKICB9OwoKICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOwp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgaWYgKGtleSBpbiBvYmopIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgewogICAgICB2YWx1ZTogdmFsdWUsCiAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgd3JpdGFibGU6IHRydWUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBvYmpba2V5XSA9IHZhbHVlOwogIH0KCiAgcmV0dXJuIG9iajsKfQoKdmFyIFJlcXVlc3RzVmlld0NvbXBvbmVudCA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9Db21wb25lbnQpIHsKICBfaW5oZXJpdHMoUmVxdWVzdHNWaWV3Q29tcG9uZW50LCBfQ29tcG9uZW50KTsKCiAgZnVuY3Rpb24gUmVxdWVzdHNWaWV3Q29tcG9uZW50KHByb3BzKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlcXVlc3RzVmlld0NvbXBvbmVudCk7CgogICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoUmVxdWVzdHNWaWV3Q29tcG9uZW50KS5jYWxsKHRoaXMsIHByb3BzKSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAiX29uUmVxdWVzdHNDaGFuZ2UiLCBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciByZXF1ZXN0cyA9IF90aGlzLnByb3BzLmFkYXB0ZXJzLnJlcXVlc3RzLmdldFJlcXVlc3RzKCk7CgogICAgICB2YXIgbmV3U3RhdGUgPSB7CiAgICAgICAgcmVxdWVzdHM6IHJlcXVlc3RzCiAgICAgIH07CgogICAgICBpZiAoIXJlcXVlc3RzLmluY2x1ZGVzKF90aGlzLnN0YXRlLnJlcXVlc3QpKSB7CiAgICAgICAgbmV3U3RhdGUucmVxdWVzdCA9IHJlcXVlc3RzLmxlbmd0aCA/IHJlcXVlc3RzWzBdIDogbnVsbDsKICAgICAgfQoKICAgICAgX3RoaXMuc2V0U3RhdGUobmV3U3RhdGUpOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAic2VsZWN0UmVxdWVzdCIsIGZ1bmN0aW9uIChyZXF1ZXN0KSB7CiAgICAgIGlmIChyZXF1ZXN0ICE9PSBfdGhpcy5zdGF0ZS5yZXF1ZXN0KSB7CiAgICAgICAgX3RoaXMuc2V0U3RhdGUoewogICAgICAgICAgcmVxdWVzdDogcmVxdWVzdAogICAgICAgIH0pOwogICAgICB9CiAgICB9KTsKCiAgICBwcm9wcy5hZGFwdGVycy5yZXF1ZXN0cy5vbignY2hhbmdlJywgX3RoaXMuX29uUmVxdWVzdHNDaGFuZ2UpOwoKICAgIHZhciBfcmVxdWVzdHMgPSBwcm9wcy5hZGFwdGVycy5yZXF1ZXN0cy5nZXRSZXF1ZXN0cygpOwoKICAgIF90aGlzLnN0YXRlID0gewogICAgICByZXF1ZXN0czogX3JlcXVlc3RzLAogICAgICByZXF1ZXN0OiBfcmVxdWVzdHMubGVuZ3RoID8gX3JlcXVlc3RzWzBdIDogbnVsbAogICAgfTsKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhSZXF1ZXN0c1ZpZXdDb21wb25lbnQsIFt7CiAgICBrZXk6ICJjb21wb25lbnRXaWxsVW5tb3VudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7CiAgICAgIHRoaXMucHJvcHMuYWRhcHRlcnMucmVxdWVzdHMucmVtb3ZlTGlzdGVuZXIoJ2NoYW5nZScsIHRoaXMuX29uUmVxdWVzdHNDaGFuZ2UpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICBpZiAoIXRoaXMuc3RhdGUucmVxdWVzdHMgfHwgIXRoaXMuc3RhdGUucmVxdWVzdHMubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIFJlcXVlc3RzVmlld0NvbXBvbmVudC5yZW5kZXJFbXB0eVJlcXVlc3RzKCk7CiAgICAgIH0KCiAgICAgIHZhciBmYWlsZWRDb3VudCA9IHRoaXMuc3RhdGUucmVxdWVzdHMuZmlsdGVyKGZ1bmN0aW9uIChyZXEpIHsKICAgICAgICByZXR1cm4gcmVxLnN0YXR1cyA9PT0gX2FkYXB0ZXJzLlJlcXVlc3RTdGF0dXMuRVJST1I7CiAgICAgIH0pLmxlbmd0aDsKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUZXh0LCB7CiAgICAgICAgc2l6ZTogInhzIgogICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJwIiwgewogICAgICAgIHJvbGU6ICJzdGF0dXMiLAogICAgICAgICJhcmlhLWxpdmUiOiAicG9saXRlIiwKICAgICAgICAiYXJpYS1hdG9taWMiOiAidHJ1ZSIKICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgICBpZDogImluc3BlY3Rvci5yZXF1ZXN0cy5yZXF1ZXN0V2FzTWFkZURlc2NyaXB0aW9uIiwKICAgICAgICBkZWZhdWx0TWVzc2FnZTogIntyZXF1ZXN0c0NvdW50LCBwbHVyYWwsIG9uZSB7IyByZXF1ZXN0IHdhc30gb3RoZXIgeyMgcmVxdWVzdHMgd2VyZX0gfSBtYWRle2ZhaWxlZFJlcXVlc3RzfSIsCiAgICAgICAgdmFsdWVzOiB7CiAgICAgICAgICByZXF1ZXN0c0NvdW50OiB0aGlzLnN0YXRlLnJlcXVlc3RzLmxlbmd0aCwKICAgICAgICAgIGZhaWxlZFJlcXVlc3RzOiBmYWlsZWRDb3VudCA+IDAgPyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGV4dENvbG9yLCB7CiAgICAgICAgICAgIGNvbG9yOiAiZGFuZ2VyIgogICAgICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgICAgICAgaWQ6ICJpbnNwZWN0b3IucmVxdWVzdHMucmVxdWVzdFdhc01hZGVEZXNjcmlwdGlvbi5yZXF1ZXN0SGFkRmFpbHVyZVRleHQiLAogICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogIiwge2ZhaWxlZENvdW50fSBoYWQgYSBmYWlsdXJlIiwKICAgICAgICAgICAgdmFsdWVzOiB7CiAgICAgICAgICAgICAgZmFpbGVkQ291bnQ6IGZhaWxlZENvdW50CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pKSA6ICcnCiAgICAgICAgfQogICAgICB9KSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCB7CiAgICAgICAgc2l6ZTogInhzIgogICAgICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVxdWVzdF9zZWxlY3Rvci5SZXF1ZXN0U2VsZWN0b3IsIHsKICAgICAgICByZXF1ZXN0czogdGhpcy5zdGF0ZS5yZXF1ZXN0cywKICAgICAgICBzZWxlY3RlZFJlcXVlc3Q6IHRoaXMuc3RhdGUucmVxdWVzdCwKICAgICAgICBvblJlcXVlc3RDaGFuZ2VkOiB0aGlzLnNlbGVjdFJlcXVlc3QKICAgICAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIHsKICAgICAgICBzaXplOiAieHMiCiAgICAgIH0pLCB0aGlzLnN0YXRlLnJlcXVlc3QgJiYgdGhpcy5zdGF0ZS5yZXF1ZXN0LmRlc2NyaXB0aW9uICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUZXh0LCB7CiAgICAgICAgc2l6ZTogInhzIgogICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJwIiwgbnVsbCwgdGhpcy5zdGF0ZS5yZXF1ZXN0LmRlc2NyaXB0aW9uKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIHsKICAgICAgICBzaXplOiAibSIKICAgICAgfSksIHRoaXMuc3RhdGUucmVxdWVzdCAmJiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZXF1ZXN0X2RldGFpbHMuUmVxdWVzdERldGFpbHMsIHsKICAgICAgICByZXF1ZXN0OiB0aGlzLnN0YXRlLnJlcXVlc3QKICAgICAgfSkpOwogICAgfQogIH1dLCBbewogICAga2V5OiAicmVuZGVyRW1wdHlSZXF1ZXN0cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyRW1wdHlSZXF1ZXN0cygpIHsKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlFbXB0eVByb21wdCwgewogICAgICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJpbnNwZWN0b3JOb1JlcXVlc3RzTWVzc2FnZSIsCiAgICAgICAgdGl0bGU6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImgyIiwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgICAgIGlkOiAiaW5zcGVjdG9yLnJlcXVlc3RzLm5vUmVxdWVzdHNMb2dnZWRUaXRsZSIsCiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogIk5vIHJlcXVlc3RzIGxvZ2dlZCIKICAgICAgICB9KSksCiAgICAgICAgYm9keTogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgicCIsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgICAgICBpZDogImluc3BlY3Rvci5yZXF1ZXN0cy5ub1JlcXVlc3RzTG9nZ2VkRGVzY3JpcHRpb24uZWxlbWVudEhhc05vdExvZ2dlZEFueVJlcXVlc3RzVGV4dCIsCiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogIlRoZSBlbGVtZW50IGhhc24ndCBsb2dnZWQgYW55IHJlcXVlc3RzICh5ZXQpLiIKICAgICAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInAiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgICAgaWQ6ICJpbnNwZWN0b3IucmVxdWVzdHMubm9SZXF1ZXN0c0xvZ2dlZERlc2NyaXB0aW9uLndoYXREb2VzSXRVc3VhbGx5TWVhblRleHQiLAogICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJUaGlzIHVzdWFsbHkgbWVhbnMgdGhhdCB0aGVyZSB3YXMgbm8gbmVlZCB0byBmZXRjaCBhbnkgZGF0YSBvciB0aGF0IHRoZSBlbGVtZW50IGhhcyBub3QgeWV0IHN0YXJ0ZWQgZmV0Y2hpbmcgZGF0YS4iCiAgICAgICAgfSkpKQogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBSZXF1ZXN0c1ZpZXdDb21wb25lbnQ7Cn0oX3JlYWN0LkNvbXBvbmVudCk7CgpleHBvcnRzLlJlcXVlc3RzVmlld0NvbXBvbmVudCA9IFJlcXVlc3RzVmlld0NvbXBvbmVudDsKCl9kZWZpbmVQcm9wZXJ0eShSZXF1ZXN0c1ZpZXdDb21wb25lbnQsICJwcm9wVHlwZXMiLCB7CiAgYWRhcHRlcnM6IF9wcm9wVHlwZXMuZGVmYXVsdC5vYmplY3QuaXNSZXF1aXJlZCwKICB0aXRsZTogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZy5pc1JlcXVpcmVkCn0pOw=="},null]}