{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/registry/doc_views_helpers.js","dependencies":[{"path":"src/legacy/ui/public/registry/doc_views_helpers.js","mtime":1572296412872},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmluamVjdEFuZ3VsYXJFbGVtZW50ID0gaW5qZWN0QW5ndWxhckVsZW1lbnQ7CmV4cG9ydHMuY29udmVydERpcmVjdGl2ZVRvUmVuZGVyRm4gPSBjb252ZXJ0RGlyZWN0aXZlVG9SZW5kZXJGbjsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9yZWFjdERvbSA9IHJlcXVpcmUoInJlYWN0LWRvbSIpOwoKdmFyIF9hbmd1bGFyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJhbmd1bGFyIikpOwoKdmFyIF9jaHJvbWUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInVpL2Nocm9tZSIpKTsKCnZhciBfZG9jX3ZpZXdlcl9yZW5kZXJfZXJyb3IgPSByZXF1aXJlKCIuLi8uLi8uLi9jb3JlX3BsdWdpbnMva2liYW5hL3B1YmxpYy9kb2Nfdmlld2VyL2RvY192aWV3ZXJfcmVuZGVyX2Vycm9yIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7CiAgdHJ5IHsKICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTsKICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIHJlamVjdChlcnJvcik7CiAgICByZXR1cm47CiAgfQoKICBpZiAoaW5mby5kb25lKSB7CiAgICByZXNvbHZlKHZhbHVlKTsKICB9IGVsc2UgewogICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpOwogIH0KfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsKICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgdmFyIHNlbGYgPSB0aGlzLAogICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7CgogICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkgewogICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHsKICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7CiAgICAgIH0KCiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7CiAgICB9KTsKICB9Owp9Ci8qKgogKiBDb21waWxlcyBhbmQgaW5qZWN0cyB0aGUgZ2l2ZSBhbmd1bGFyIHRlbXBsYXRlIGludG8gdGhlIGdpdmVuIGRvbSBub2RlCiAqIHJldHVybnMgYSBmdW5jdGlvbiB0byBjbGVhbnVwIHRoZSBpbmplY3RlZCBhbmd1bGFyIGVsZW1lbnQKICovCgoKZnVuY3Rpb24gaW5qZWN0QW5ndWxhckVsZW1lbnQoX3gsIF94MiwgX3gzLCBfeDQpIHsKICByZXR1cm4gX2luamVjdEFuZ3VsYXJFbGVtZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KLyoqCiAqIENvbnZlcnRzIGEgZ2l2ZW4gbGVnYWN5IGFuZ3VsYXIgZGlyZWN0aXZlIHRvIGEgcmVuZGVyIGZ1bmN0aW9uCiAqIGZvciB1c2FnZSBpbiBhIHJlYWN0IGNvbXBvbmVudC4gTm90ZSB0aGF0IHRoZSByZW5kZXJpbmcgaXMgYXN5bmMKICovCgoKZnVuY3Rpb24gX2luamVjdEFuZ3VsYXJFbGVtZW50KCkgewogIF9pbmplY3RBbmd1bGFyRWxlbWVudCA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGRvbU5vZGUsIHRlbXBsYXRlLCBzY29wZVByb3BzLCBDb250cm9sbGVyKSB7CiAgICB2YXIgJGluamVjdG9yLCByb290U2NvcGUsICRjb21waWxlLCBuZXdTY29wZSwgJHRhcmdldCwgJGVsZW1lbnQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gX2Nocm9tZS5kZWZhdWx0LmRhbmdlcm91c2x5R2V0QWN0aXZlSW5qZWN0b3IoKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICRpbmplY3RvciA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHJvb3RTY29wZSA9ICRpbmplY3Rvci5nZXQoJyRyb290U2NvcGUnKTsKICAgICAgICAgICAgJGNvbXBpbGUgPSAkaW5qZWN0b3IuZ2V0KCckY29tcGlsZScpOwogICAgICAgICAgICBuZXdTY29wZSA9IE9iamVjdC5hc3NpZ24ocm9vdFNjb3BlLiRuZXcoKSwgc2NvcGVQcm9wcyk7CgogICAgICAgICAgICBpZiAodHlwZW9mIENvbnRyb2xsZXIgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgICAgICAvLyB3aGVuIGEgY29udHJvbGxlciBpcyBkZWZpbmVkLCBleHBvc2UgdGhlIHZhbHVlIGl0IHByb2R1Y2VzIHRvIHRoZSB2aWV3IGFzIGAkY3RybGAKICAgICAgICAgICAgICAvLyBzZWU6IGh0dHBzOi8vZG9jcy5hbmd1bGFyanMub3JnL2FwaS9uZy9wcm92aWRlci8kY29tcGlsZVByb3ZpZGVyI2NvbXBvbmVudAogICAgICAgICAgICAgIG5ld1Njb3BlLiRjdHJsID0gJGluamVjdG9yLmluc3RhbnRpYXRlKENvbnRyb2xsZXIsIHsKICAgICAgICAgICAgICAgICRzY29wZTogbmV3U2NvcGUKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJHRhcmdldCA9IF9hbmd1bGFyLmRlZmF1bHQuZWxlbWVudChkb21Ob2RlKTsKICAgICAgICAgICAgJGVsZW1lbnQgPSBfYW5ndWxhci5kZWZhdWx0LmVsZW1lbnQodGVtcGxhdGUpOwogICAgICAgICAgICBuZXdTY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIHZhciBsaW5rRm4gPSAkY29tcGlsZSgkZWxlbWVudCk7CiAgICAgICAgICAgICAgJHRhcmdldC5lbXB0eSgpLmFwcGVuZCgkZWxlbWVudCk7CiAgICAgICAgICAgICAgbGlua0ZuKG5ld1Njb3BlKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBuZXdTY29wZS4kZGVzdHJveSgpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKICByZXR1cm4gX2luamVjdEFuZ3VsYXJFbGVtZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGNvbnZlcnREaXJlY3RpdmVUb1JlbmRlckZuKGRpcmVjdGl2ZSkgewogIHJldHVybiBmdW5jdGlvbiAoZG9tTm9kZSwgcHJvcHMpIHsKICAgIHZhciByZWplY3RlZCA9IGZhbHNlOwogICAgdmFyIGNsZWFudXBGblByb21pc2UgPSBpbmplY3RBbmd1bGFyRWxlbWVudChkb21Ob2RlLCBkaXJlY3RpdmUudGVtcGxhdGUsIHByb3BzLCBkaXJlY3RpdmUuY29udHJvbGxlcik7CiAgICBjbGVhbnVwRm5Qcm9taXNlLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgIHJlamVjdGVkID0gdHJ1ZTsKICAgICAgKDAsIF9yZWFjdERvbS5yZW5kZXIpKF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2RvY192aWV3ZXJfcmVuZGVyX2Vycm9yLkRvY1ZpZXdlckVycm9yLCB7CiAgICAgICAgZXJyb3I6IGUKICAgICAgfSksIGRvbU5vZGUpOwogICAgfSk7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICBpZiAoIXJlamVjdGVkKSB7CiAgICAgICAgLy8gZm9yIGNsZWFudXAKICAgICAgICAvLyBodHRwOi8vcm91YmVubWVzY2hpYW4uY29tL3J1Ym8vP3A9NTEKICAgICAgICBjbGVhbnVwRm5Qcm9taXNlLnRoZW4oZnVuY3Rpb24gKGNsZWFudXApIHsKICAgICAgICAgIHJldHVybiBjbGVhbnVwKCk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH07CiAgfTsKfQ=="},null]}