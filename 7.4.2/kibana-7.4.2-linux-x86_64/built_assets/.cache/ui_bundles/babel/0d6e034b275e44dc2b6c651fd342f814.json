{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/core/public/fatal_errors/fatal_errors_service.js","dependencies":[{"path":"src/core/public/fatal_errors/fatal_errors_service.js","mtime":1572296408452},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkZhdGFsRXJyb3JzU2VydmljZSA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9yZWFjdERvbSA9IHJlcXVpcmUoInJlYWN0LWRvbSIpOwoKdmFyIFJ4ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicnhqcyIpKTsKCnZhciBfb3BlcmF0b3JzID0gcmVxdWlyZSgicnhqcy9vcGVyYXRvcnMiKTsKCnZhciBfZmF0YWxfZXJyb3JzX3NjcmVlbiA9IHJlcXVpcmUoIi4vZmF0YWxfZXJyb3JzX3NjcmVlbiIpOwoKdmFyIF9nZXRfZXJyb3JfaW5mbyA9IHJlcXVpcmUoIi4vZ2V0X2Vycm9yX2luZm8iKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOwogICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOwogICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7CiAgfQp9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7CiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOwogIHJldHVybiBDb25zdHJ1Y3RvcjsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KLyoqIEBpbnRlcmFsICovCgoKdmFyIEZhdGFsRXJyb3JzU2VydmljZSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIC8qKgogICAqCiAgICogQHBhcmFtIHJvb3REb21FbGVtZW50CiAgICogQHBhcmFtIG9uRmlyc3RFcnJvckNiIC0gQ2FsbGJhY2sgZnVuY3Rpb24gdGhhdCBnZXRzIGV4ZWN1dGVkIGFmdGVyIHRoZSBmaXJzdCBlcnJvciwKICAgKiAgIGJ1dCBiZWZvcmUgdGhlIEZhdGFsRXJyb3JzU2VydmljZSByZW5kZXJzIHRoZSBlcnJvciB0byB0aGUgRE9NLgogICAqLwogIGZ1bmN0aW9uIEZhdGFsRXJyb3JzU2VydmljZShyb290RG9tRWxlbWVudCwgb25GaXJzdEVycm9yQ2IpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGYXRhbEVycm9yc1NlcnZpY2UpOwoKICAgIHRoaXMucm9vdERvbUVsZW1lbnQgPSByb290RG9tRWxlbWVudDsKICAgIHRoaXMub25GaXJzdEVycm9yQ2IgPSBvbkZpcnN0RXJyb3JDYjsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImVycm9ySW5mbyQiLCBuZXcgUnguUmVwbGF5U3ViamVjdCgpKTsKICB9CgogIF9jcmVhdGVDbGFzcyhGYXRhbEVycm9yc1NlcnZpY2UsIFt7CiAgICBrZXk6ICJzZXR1cCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0dXAoX3JlZikgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGkxOG4gPSBfcmVmLmkxOG4sCiAgICAgICAgICBpbmplY3RlZE1ldGFkYXRhID0gX3JlZi5pbmplY3RlZE1ldGFkYXRhOwogICAgICB0aGlzLmVycm9ySW5mbyQucGlwZSgoMCwgX29wZXJhdG9ycy5maXJzdCkoKSwgKDAsIF9vcGVyYXRvcnMudGFwKShmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMub25GaXJzdEVycm9yQ2IoKTsKCiAgICAgICAgX3RoaXMucmVuZGVyRXJyb3IoaW5qZWN0ZWRNZXRhZGF0YSwgaTE4bik7CiAgICAgIH0pKS5zdWJzY3JpYmUoewogICAgICAgIGVycm9yOiBmdW5jdGlvbiAoX2Vycm9yKSB7CiAgICAgICAgICBmdW5jdGlvbiBlcnJvcihfeCkgewogICAgICAgICAgICByZXR1cm4gX2Vycm9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICB9CgogICAgICAgICAgZXJyb3IudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBfZXJyb3IudG9TdHJpbmcoKTsKICAgICAgICAgIH07CgogICAgICAgICAgcmV0dXJuIGVycm9yOwogICAgICAgIH0oZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgY29uc29sZS5lcnJvcignVW5jYXVnaHQgZXJyb3IgaW4gZmF0YWwgZXJyb3Igc2VydmljZSBpbnRlcm5hbHMnLCBlcnJvcik7CiAgICAgICAgfSkKICAgICAgfSk7CiAgICAgIHZhciBmYXRhbEVycm9yc1NldHVwID0gewogICAgICAgIGFkZDogZnVuY3Rpb24gYWRkKGVycm9yLCBzb3VyY2UpIHsKICAgICAgICAgIHZhciBlcnJvckluZm8gPSAoMCwgX2dldF9lcnJvcl9pbmZvLmdldEVycm9ySW5mbykoZXJyb3IsIHNvdXJjZSk7CgogICAgICAgICAgX3RoaXMuZXJyb3JJbmZvJC5uZXh0KGVycm9ySW5mbyk7CgogICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHsKICAgICAgICAgICAgLy8gbWFrZSBzdGFjayB0cmFjZXMgY2xpY2thYmxlIGJ5IHB1dHRpbmcgd2hvbGUgZXJyb3IgaW4gdGhlIGNvbnNvbGUKICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUKICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgICB9CgogICAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgICAgfSwKICAgICAgICBnZXQkOiBmdW5jdGlvbiBnZXQkKCkgewogICAgICAgICAgcmV0dXJuIF90aGlzLmVycm9ySW5mbyQuYXNPYnNlcnZhYmxlKCk7CiAgICAgICAgfQogICAgICB9OwogICAgICB0aGlzLnNldHVwR2xvYmFsRXJyb3JIYW5kbGVycyhmYXRhbEVycm9yc1NldHVwKTsKICAgICAgcmV0dXJuIGZhdGFsRXJyb3JzU2V0dXA7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVuZGVyRXJyb3IiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlckVycm9yKGluamVjdGVkTWV0YWRhdGEsIGkxOG4pIHsKICAgICAgLy8gZGVsZXRlIGFsbCBjb250ZW50IGluIHRoZSByb290RG9tRWxlbWVudAogICAgICB0aGlzLnJvb3REb21FbGVtZW50LnRleHRDb250ZW50ID0gJyc7IC8vIGNyZWF0ZSBhbmQgbW91bnQgYSBjb250YWluZXIgZm9yIHRoZSA8RmF0YWxFcnJvclNjcmVlbj4KCiAgICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgdGhpcy5yb290RG9tRWxlbWVudC5hcHBlbmRDaGlsZChjb250YWluZXIpOwogICAgICAoMCwgX3JlYWN0RG9tLnJlbmRlcikoX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChpMThuLkNvbnRleHQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2ZhdGFsX2Vycm9yc19zY3JlZW4uRmF0YWxFcnJvcnNTY3JlZW4sIHsKICAgICAgICBidWlsZE51bWJlcjogaW5qZWN0ZWRNZXRhZGF0YS5nZXRLaWJhbmFCdWlsZE51bWJlcigpLAogICAgICAgIGtpYmFuYVZlcnNpb246IGluamVjdGVkTWV0YWRhdGEuZ2V0S2liYW5hVmVyc2lvbigpLAogICAgICAgIGVycm9ySW5mbyQ6IHRoaXMuZXJyb3JJbmZvJAogICAgICB9KSksIGNvbnRhaW5lcik7CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0dXBHbG9iYWxFcnJvckhhbmRsZXJzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXR1cEdsb2JhbEVycm9ySGFuZGxlcnMoZmF0YWxFcnJvcnNTZXR1cCkgewogICAgICBpZiAod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHsKICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndW5oYW5kbGVkcmVqZWN0aW9uJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJEZXRlY3RlZCBhbiB1bmhhbmRsZWQgUHJvbWlzZSByZWplY3Rpb24uXG4iLmNvbmNhdChlLnJlYXNvbikpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGUKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH1dKTsKCiAgcmV0dXJuIEZhdGFsRXJyb3JzU2VydmljZTsKfSgpOwoKZXhwb3J0cy5GYXRhbEVycm9yc1NlcnZpY2UgPSBGYXRhbEVycm9yc1NlcnZpY2U7"},null]}