{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/vis/editors/default/components/agg.js","dependencies":[{"path":"src/legacy/ui/public/vis/editors/default/components/agg.js","mtime":1572296413208},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkRlZmF1bHRFZGl0b3JBZ2cgPSBEZWZhdWx0RWRpdG9yQWdnOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9hZ2dfcGFyYW1zID0gcmVxdWlyZSgiLi9hZ2dfcGFyYW1zIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsKICByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgewogIHZhciBfYXJyID0gW107CiAgdmFyIF9uID0gdHJ1ZTsKICB2YXIgX2QgPSBmYWxzZTsKICB2YXIgX2UgPSB1bmRlZmluZWQ7CgogIHRyeSB7CiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7CiAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7CgogICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfZCA9IHRydWU7CiAgICBfZSA9IGVycjsKICB9IGZpbmFsbHkgewogICAgdHJ5IHsKICAgICAgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7CiAgICB9IGZpbmFsbHkgewogICAgICBpZiAoX2QpIHRocm93IF9lOwogICAgfQogIH0KCiAgcmV0dXJuIF9hcnI7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOwp9CgpmdW5jdGlvbiBEZWZhdWx0RWRpdG9yQWdnKF9yZWYpIHsKICB2YXIgYWdnID0gX3JlZi5hZ2csCiAgICAgIGFnZ0luZGV4ID0gX3JlZi5hZ2dJbmRleCwKICAgICAgYWdnSXNUb29Mb3cgPSBfcmVmLmFnZ0lzVG9vTG93LAogICAgICBkcmFnSGFuZGxlUHJvcHMgPSBfcmVmLmRyYWdIYW5kbGVQcm9wcywKICAgICAgZm9ybUlzVG91Y2hlZCA9IF9yZWYuZm9ybUlzVG91Y2hlZCwKICAgICAgZ3JvdXBOYW1lID0gX3JlZi5ncm91cE5hbWUsCiAgICAgIGlzRHJhZ2dhYmxlID0gX3JlZi5pc0RyYWdnYWJsZSwKICAgICAgaXNMYXN0QnVja2V0ID0gX3JlZi5pc0xhc3RCdWNrZXQsCiAgICAgIGlzUmVtb3ZhYmxlID0gX3JlZi5pc1JlbW92YWJsZSwKICAgICAgbWV0cmljQWdncyA9IF9yZWYubWV0cmljQWdncywKICAgICAgbGFzdFBhcmVudFBpcGVsaW5lQWdnVGl0bGUgPSBfcmVmLmxhc3RQYXJlbnRQaXBlbGluZUFnZ1RpdGxlLAogICAgICBzdGF0ZSA9IF9yZWYuc3RhdGUsCiAgICAgIG9uQWdnUGFyYW1zQ2hhbmdlID0gX3JlZi5vbkFnZ1BhcmFtc0NoYW5nZSwKICAgICAgb25BZ2dUeXBlQ2hhbmdlID0gX3JlZi5vbkFnZ1R5cGVDaGFuZ2UsCiAgICAgIG9uVG9nZ2xlRW5hYmxlQWdnID0gX3JlZi5vblRvZ2dsZUVuYWJsZUFnZywKICAgICAgcmVtb3ZlQWdnID0gX3JlZi5yZW1vdmVBZ2csCiAgICAgIHNldFRvdWNoZWQgPSBfcmVmLnNldFRvdWNoZWQsCiAgICAgIHNldFZhbGlkaXR5ID0gX3JlZi5zZXRWYWxpZGl0eTsKCiAgdmFyIF91c2VTdGF0ZSA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKGFnZy5icmFuZE5ldyksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBpc0VkaXRvck9wZW4gPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRJc0VkaXRvck9wZW4gPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZVN0YXRlMyA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKHRydWUpLAogICAgICBfdXNlU3RhdGU0ID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlMywgMiksCiAgICAgIHZhbGlkU3RhdGUgPSBfdXNlU3RhdGU0WzBdLAogICAgICBzZXRWYWxpZFN0YXRlID0gX3VzZVN0YXRlNFsxXTsKCiAgdmFyIHNob3dEZXNjcmlwdGlvbiA9ICFpc0VkaXRvck9wZW4gJiYgdmFsaWRTdGF0ZTsKICB2YXIgc2hvd0Vycm9yID0gIWlzRWRpdG9yT3BlbiAmJiAhdmFsaWRTdGF0ZTsKICB2YXIgZGlzYWJsZWRQYXJhbXM7CiAgdmFyIGFnZ0Vycm9yOyAvLyBXaGVuIGEgUGFyZW50IFBpcGVsaW5lIGFnZyBpcyBzZWxlY3RlZCBhbmQgdGhpcyBhZ2cgaXMgdGhlIGxhc3QgYnVja2V0LgoKICB2YXIgaXNMYXN0QnVja2V0QWdnID0gaXNMYXN0QnVja2V0ICYmIGxhc3RQYXJlbnRQaXBlbGluZUFnZ1RpdGxlICYmIGFnZy50eXBlOwogIHZhciBTY2hlbWFDb21wb25lbnQgPSBhZ2cuc2NoZW1hLmVkaXRvckNvbXBvbmVudDsKCiAgaWYgKGlzTGFzdEJ1Y2tldEFnZykgewogICAgaWYgKFsnZGF0ZV9oaXN0b2dyYW0nLCAnaGlzdG9ncmFtJ10uaW5jbHVkZXMoYWdnLnR5cGUubmFtZSkpIHsKICAgICAgZGlzYWJsZWRQYXJhbXMgPSBbJ21pbl9kb2NfY291bnQnXTsKICAgIH0gZWxzZSB7CiAgICAgIGFnZ0Vycm9yID0gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvbW1vbi51aS5hZ2dUeXBlcy5tZXRyaWNzLndyb25nTGFzdEJ1Y2tldFR5cGVFcnJvck1lc3NhZ2UnLCB7CiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdMYXN0IGJ1Y2tldCBhZ2dyZWdhdGlvbiBtdXN0IGJlICJEYXRlIEhpc3RvZ3JhbSIgb3IgIkhpc3RvZ3JhbSIgd2hlbiB1c2luZyAie3R5cGV9IiBtZXRyaWMgYWdncmVnYXRpb24uJywKICAgICAgICB2YWx1ZXM6IHsKICAgICAgICAgIHR5cGU6IGxhc3RQYXJlbnRQaXBlbGluZUFnZ1RpdGxlCiAgICAgICAgfSwKICAgICAgICBkZXNjcmlwdGlvbjogJ0RhdGUgSGlzdG9ncmFtIGFuZCBIaXN0b2dyYW0gc2hvdWxkIG5vdCBiZSB0cmFuc2xhdGVkJwogICAgICB9KTsKICAgIH0KICB9IC8vIEEgZGVzY3JpcHRpb24gb2YgdGhlIGFnZ3JlZ2F0aW9uLCBmb3IgZGlzcGxheWluZyBpbiB0aGUgY29sbGFwc2VkIGFnZyBoZWFkZXIKCgogIHZhciBhZ2dEZXNjcmlwdGlvbiA9ICcnOwoKICBpZiAoYWdnLnR5cGUgJiYgYWdnLnR5cGUubWFrZUxhYmVsKSB7CiAgICB0cnkgewogICAgICBhZ2dEZXNjcmlwdGlvbiA9IGFnZy50eXBlLm1ha2VMYWJlbChhZ2cpOwogICAgfSBjYXRjaCAoZSkgewogICAgICAvLyBEYXRlIEhpc3RvZ3JhbSdzIGBtYWtlTGFiZWxgIGltcGxlbWVudGF0aW9uIGludm9rZXMgJ3dyaXRlJyBtZXRob2QgZm9yIGVhY2ggcGFyYW0sIGluY2x1ZGluZyBpbnRlcnZhbCdzICd3cml0ZScsCiAgICAgIC8vIHdoaWNoIHRocm93cyBhbiBlcnJvciB3aGVuIGludGVydmFsIGlzIHVuZGVmaW5lZC4KICAgICAgYWdnRGVzY3JpcHRpb24gPSAnJzsKICAgIH0KICB9CgogICgwLCBfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7CiAgICBpZiAoaXNMYXN0QnVja2V0QWdnICYmIFsnZGF0ZV9oaXN0b2dyYW0nLCAnaGlzdG9ncmFtJ10uaW5jbHVkZXMoYWdnLnR5cGUubmFtZSkpIHsKICAgICAgb25BZ2dQYXJhbXNDaGFuZ2UoYWdnLnBhcmFtcywgJ21pbl9kb2NfY291bnQnLCAvLyAiaGlzdG9ncmFtIiBhZ2cgaGFzIGFuIGVkaXRvciBmb3IgIm1pbl9kb2NfY291bnQiIHBhcmFtLCB3aGljaCBhY2NlcHRzIGJvb2xlYW4KICAgICAgLy8gImRhdGVfaGlzdG9ncmFtIiBhZ2cgZG9lc24ndCBoYXZlIGFuIGVkaXRvciBmb3IgIm1pbl9kb2NfY291bnQiIHBhcmFtLCBpdCBzaG91bGQgYmUgc2V0IGFzIGEgbnVtZXJpYyB2YWx1ZQogICAgICBhZ2cudHlwZS5uYW1lID09PSAnaGlzdG9ncmFtJyA/IHRydWUgOiAwKTsKICAgIH0KICB9LCBbbGFzdFBhcmVudFBpcGVsaW5lQWdnVGl0bGUsIGlzTGFzdEJ1Y2tldCwgYWdnLnR5cGVdKTsKCiAgdmFyIG9uVG9nZ2xlID0gZnVuY3Rpb24gb25Ub2dnbGUoaXNPcGVuKSB7CiAgICBzZXRJc0VkaXRvck9wZW4oaXNPcGVuKTsKCiAgICBpZiAoIWlzT3BlbikgewogICAgICBzZXRUb3VjaGVkKHRydWUpOwogICAgfQogIH07CgogIHZhciBvblNldFZhbGlkaXR5ID0gZnVuY3Rpb24gb25TZXRWYWxpZGl0eShpc1ZhbGlkKSB7CiAgICBzZXRWYWxpZGl0eShpc1ZhbGlkKTsKICAgIHNldFZhbGlkU3RhdGUoaXNWYWxpZCk7CiAgfTsKCiAgdmFyIHJlbmRlckFnZ0J1dHRvbnMgPSBmdW5jdGlvbiByZW5kZXJBZ2dCdXR0b25zKCkgewogICAgdmFyIGFjdGlvbkljb25zID0gW107CgogICAgaWYgKHNob3dFcnJvcikgewogICAgICBhY3Rpb25JY29ucy5wdXNoKHsKICAgICAgICBpZDogJ2hhc0Vycm9ycycsCiAgICAgICAgY29sb3I6ICdkYW5nZXInLAogICAgICAgIHR5cGU6ICdhbGVydCcsCiAgICAgICAgdG9vbHRpcDogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvbW1vbi51aS52aXMuZWRpdG9ycy5hZ2cuZXJyb3JzQXJpYUxhYmVsJywgewogICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdBZ2dyZWdhdGlvbiBoYXMgZXJyb3JzJwogICAgICAgIH0pLAogICAgICAgIGRhdGFUZXN0U3ViajogJ2hhc0Vycm9yc0FnZ3JlZ2F0aW9uSWNvbicKICAgICAgfSk7CiAgICB9CgogICAgaWYgKGFnZy5lbmFibGVkICYmIGlzUmVtb3ZhYmxlKSB7CiAgICAgIGFjdGlvbkljb25zLnB1c2goewogICAgICAgIGlkOiAnZGlzYWJsZUFnZ3JlZ2F0aW9uJywKICAgICAgICBjb2xvcjogJ3RleHQnLAogICAgICAgIHR5cGU6ICdleWUnLAogICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgICAgICByZXR1cm4gb25Ub2dnbGVFbmFibGVBZ2coYWdnLCBmYWxzZSk7CiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29tbW9uLnVpLnZpcy5lZGl0b3JzLmFnZy5kaXNhYmxlQWdnQnV0dG9uVG9vbHRpcCcsIHsKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnRGlzYWJsZSBhZ2dyZWdhdGlvbicKICAgICAgICB9KSwKICAgICAgICBkYXRhVGVzdFN1Ymo6ICd0b2dnbGVEaXNhYmxlQWdncmVnYXRpb25CdG4gZGlzYWJsZScKICAgICAgfSk7CiAgICB9CgogICAgaWYgKCFhZ2cuZW5hYmxlZCkgewogICAgICBhY3Rpb25JY29ucy5wdXNoKHsKICAgICAgICBpZDogJ2VuYWJsZUFnZ3JlZ2F0aW9uJywKICAgICAgICBjb2xvcjogJ3RleHQnLAogICAgICAgIHR5cGU6ICdleWVDbG9zZWQnLAogICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgICAgICByZXR1cm4gb25Ub2dnbGVFbmFibGVBZ2coYWdnLCB0cnVlKTsKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb21tb24udWkudmlzLmVkaXRvcnMuYWdnLmVuYWJsZUFnZ0J1dHRvblRvb2x0aXAnLCB7CiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ0VuYWJsZSBhZ2dyZWdhdGlvbicKICAgICAgICB9KSwKICAgICAgICBkYXRhVGVzdFN1Ymo6ICd0b2dnbGVEaXNhYmxlQWdncmVnYXRpb25CdG4gZW5hYmxlJwogICAgICB9KTsKICAgIH0KCiAgICBpZiAoaXNEcmFnZ2FibGUpIHsKICAgICAgYWN0aW9uSWNvbnMucHVzaCh7CiAgICAgICAgaWQ6ICdkcmFnSGFuZGxlJywKICAgICAgICB0eXBlOiAnZ3JhYicsCiAgICAgICAgdG9vbHRpcDogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvbW1vbi51aS52aXMuZWRpdG9ycy5hZ2cubW9kaWZ5UHJpb3JpdHlCdXR0b25Ub29sdGlwJywgewogICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdNb2RpZnkgcHJpb3JpdHkgYnkgZHJhZ2dpbmcnCiAgICAgICAgfSksCiAgICAgICAgZGF0YVRlc3RTdWJqOiAnZHJhZ0hhbmRsZUJ0bicKICAgICAgfSk7CiAgICB9CgogICAgaWYgKGlzUmVtb3ZhYmxlKSB7CiAgICAgIGFjdGlvbkljb25zLnB1c2goewogICAgICAgIGlkOiAncmVtb3ZlRGltZW5zaW9uJywKICAgICAgICBjb2xvcjogJ2RhbmdlcicsCiAgICAgICAgdHlwZTogJ2Nyb3NzJywKICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICAgICAgcmV0dXJuIHJlbW92ZUFnZyhhZ2cpOwogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvbW1vbi51aS52aXMuZWRpdG9ycy5hZ2cucmVtb3ZlRGltZW5zaW9uQnV0dG9uVG9vbHRpcCcsIHsKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnUmVtb3ZlIGRpbWVuc2lvbicKICAgICAgICB9KSwKICAgICAgICBkYXRhVGVzdFN1Ymo6ICdyZW1vdmVEaW1lbnNpb25CdG4nCiAgICAgIH0pOwogICAgfQoKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCBkcmFnSGFuZGxlUHJvcHMsIGFjdGlvbkljb25zLm1hcChmdW5jdGlvbiAoaWNvbikgewogICAgICBpZiAoaWNvbi5pZCA9PT0gJ2RyYWdIYW5kbGUnKSB7CiAgICAgICAgdmFyIF9yZWYyOwoKICAgICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUljb25UaXAsIHsKICAgICAgICAgIGtleTogaWNvbi5pZCwKICAgICAgICAgIHR5cGU6IGljb24udHlwZSwKICAgICAgICAgIGNvbnRlbnQ6IGljb24udG9vbHRpcCwKICAgICAgICAgIGljb25Qcm9wczogKF9yZWYyID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfcmVmMiwgJ2FyaWEtbGFiZWwnLCBpY29uLnRvb2x0aXApLCBfZGVmaW5lUHJvcGVydHkoX3JlZjIsICdkYXRhLXRlc3Qtc3ViaicsIGljb24uZGF0YVRlc3RTdWJqKSwgX3JlZjIpLAogICAgICAgICAgcG9zaXRpb246ICJib3R0b20iCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVG9vbFRpcCwgewogICAgICAgIGtleTogaWNvbi5pZCwKICAgICAgICBwb3NpdGlvbjogImJvdHRvbSIsCiAgICAgICAgY29udGVudDogaWNvbi50b29sdGlwCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlCdXR0b25JY29uLCB7CiAgICAgICAgaWNvblR5cGU6IGljb24udHlwZSwKICAgICAgICBjb2xvcjogaWNvbi5jb2xvciwKICAgICAgICBvbkNsaWNrOiBpY29uLm9uQ2xpY2ssCiAgICAgICAgImFyaWEtbGFiZWwiOiBpY29uLnRvb2x0aXAsCiAgICAgICAgImRhdGEtdGVzdC1zdWJqIjogaWNvbi5kYXRhVGVzdFN1YmoKICAgICAgfSkpOwogICAgfSkpOwogIH07CgogIHZhciBidXR0b25Db250ZW50ID0gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgYWdnLnNjaGVtYS50aXRsZSwgIiAiLCBzaG93RGVzY3JpcHRpb24gJiYgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgic3BhbiIsIG51bGwsIGFnZ0Rlc2NyaXB0aW9uKSk7CgogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQWNjb3JkaW9uLCB7CiAgICBpZDogInZpc0VkaXRvckFnZ0FjY29yZGlvbiIuY29uY2F0KGFnZy5pZCksCiAgICBpbml0aWFsSXNPcGVuOiBpc0VkaXRvck9wZW4sCiAgICBidXR0b25Db250ZW50OiBidXR0b25Db250ZW50LAogICAgYnV0dG9uQ2xhc3NOYW1lOiAiZXVpLXRleHRUcnVuY2F0ZSIsCiAgICBidXR0b25Db250ZW50Q2xhc3NOYW1lOiAidmlzRWRpdG9yU2lkZWJhcl9fYWdnR3JvdXBBY2NvcmRpb25CdXR0b25Db250ZW50IGV1aS10ZXh0VHJ1bmNhdGUiLAogICAgY2xhc3NOYW1lOiAidmlzRWRpdG9yU2lkZWJhcl9fc2VjdGlvbiB2aXNFZGl0b3JTaWRlYmFyX19jb2xsYXBzaWJsZSB2aXNFZGl0b3JTaWRlYmFyX19jb2xsYXBzaWJsZS0tbWFyZ2luQm90dG9tIiwKICAgICJhcmlhLWxhYmVsIjogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvbW1vbi51aS52aXMuZWRpdG9ycy5hZ2cudG9nZ2xlRWRpdG9yQnV0dG9uQXJpYUxhYmVsJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ1RvZ2dsZSB7c2NoZW1hfSBlZGl0b3InLAogICAgICB2YWx1ZXM6IHsKICAgICAgICBzY2hlbWE6IGFnZy5zY2hlbWEudGl0bGUKICAgICAgfQogICAgfSksCiAgICAiZGF0YS10ZXN0LXN1YmoiOiAidmlzRWRpdG9yQWdnQWNjb3JkaW9uIi5jb25jYXQoYWdnLmlkKSwKICAgIGV4dHJhQWN0aW9uOiByZW5kZXJBZ2dCdXR0b25zKCksCiAgICBvblRvZ2dsZTogb25Ub2dnbGUKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCB7CiAgICBzaXplOiAibSIKICB9KSwgU2NoZW1hQ29tcG9uZW50ICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoU2NoZW1hQ29tcG9uZW50LCB7CiAgICBhZ2dQYXJhbXM6IGFnZy5wYXJhbXMsCiAgICBlZGl0b3JTdGF0ZVBhcmFtczogc3RhdGUucGFyYW1zLAogICAgc2V0VmFsdWU6IG9uQWdnUGFyYW1zQ2hhbmdlCiAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2FnZ19wYXJhbXMuRGVmYXVsdEVkaXRvckFnZ1BhcmFtcywgewogICAgYWdnOiBhZ2csCiAgICBhZ2dFcnJvcjogYWdnRXJyb3IsCiAgICBhZ2dJbmRleDogYWdnSW5kZXgsCiAgICBhZ2dJc1Rvb0xvdzogYWdnSXNUb29Mb3csCiAgICBkaXNhYmxlZFBhcmFtczogZGlzYWJsZWRQYXJhbXMsCiAgICBmb3JtSXNUb3VjaGVkOiBmb3JtSXNUb3VjaGVkLAogICAgZ3JvdXBOYW1lOiBncm91cE5hbWUsCiAgICBpbmRleFBhdHRlcm46IGFnZy5nZXRJbmRleFBhdHRlcm4oKSwKICAgIG1ldHJpY0FnZ3M6IG1ldHJpY0FnZ3MsCiAgICBzdGF0ZTogc3RhdGUsCiAgICBvbkFnZ1BhcmFtc0NoYW5nZTogb25BZ2dQYXJhbXNDaGFuZ2UsCiAgICBvbkFnZ1R5cGVDaGFuZ2U6IG9uQWdnVHlwZUNoYW5nZSwKICAgIHNldFRvdWNoZWQ6IHNldFRvdWNoZWQsCiAgICBzZXRWYWxpZGl0eTogb25TZXRWYWxpZGl0eQogIH0pKSk7Cn0="},null]}