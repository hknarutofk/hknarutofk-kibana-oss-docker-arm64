{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/lib/ensure_minimum_time.js","dependencies":[{"path":"src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/lib/ensure_minimum_time.js","mtime":1572296410588},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmVuc3VyZU1pbmltdW1UaW1lID0gZW5zdXJlTWluaW11bVRpbWU7CmV4cG9ydHMuREVGQVVMVF9NSU5JTVVNX1RJTUVfTVMgPSB2b2lkIDA7CgpmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7IHRyeSB7IHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTsgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsgfSBjYXRjaCAoZXJyb3IpIHsgcmVqZWN0KGVycm9yKTsgcmV0dXJuOyB9IGlmIChpbmZvLmRvbmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0gZWxzZSB7IFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsgfSB9CgpmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgc2VsZiA9IHRoaXMsIGFyZ3MgPSBhcmd1bWVudHM7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsgZnVuY3Rpb24gX25leHQodmFsdWUpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAibmV4dCIsIHZhbHVlKTsgfSBmdW5jdGlvbiBfdGhyb3coZXJyKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgInRocm93IiwgZXJyKTsgfSBfbmV4dCh1bmRlZmluZWQpOyB9KTsgfTsgfQoKLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCgovKioKICogV2hlbiB5b3UgbWFrZSBhbiBhc3luYyByZXF1ZXN0LCB0eXBpY2FsbHkgeW91IHdhbnQgdG8gc2hvdyB0aGUgdXNlciBhIHNwaW5uZXIgd2hpbGUgdGhleSB3YWl0LgogKiBIb3dldmVyLCBpZiB0aGUgcmVxdWVzdCB0YWtlcyBsZXNzIHRoYW4gMzAwIG1zLCB0aGUgc3Bpbm5lciB3aWxsIGZsaWNrZXIgaW4gdGhlIFVJIGFuZCB0aGUgdXNlcgogKiB3b24ndCBoYXZlIHRpbWUgdG8gcmVnaXN0ZXIgaXQgYXMgYSBzcGlubmVyLiBUaGlzIGZ1bmN0aW9uIGVuc3VyZXMgdGhlIHNwaW5uZXIgKG9yIHdoYXRldmVyCiAqIHlvdSdyZSBzaG93aW5nIHRoZSB1c2VyKSBkaXNwbGF5cyBmb3IgYXQgbGVhc3QgMzAwIG1zLCBldmVuIGlmIHRoZSByZXF1ZXN0IGNvbXBsZXRlcyBiZWZvcmUgdGhlbi4KICovCnZhciBERUZBVUxUX01JTklNVU1fVElNRV9NUyA9IDMwMDsKZXhwb3J0cy5ERUZBVUxUX01JTklNVU1fVElNRV9NUyA9IERFRkFVTFRfTUlOSU1VTV9USU1FX01TOwoKZnVuY3Rpb24gZW5zdXJlTWluaW11bVRpbWUoX3gpIHsKICByZXR1cm4gX2Vuc3VyZU1pbmltdW1UaW1lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9lbnN1cmVNaW5pbXVtVGltZSgpIHsKICBfZW5zdXJlTWluaW11bVRpbWUgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShwcm9taXNlT3JQcm9taXNlcykgewogICAgdmFyIG1pbmltdW1UaW1lTXMsCiAgICAgICAgcmV0dXJuVmFsdWUsCiAgICAgICAgYnVmZmVyZWRNaW5pbXVtVGltZU1zLAogICAgICAgIGFzeW5jQWN0aW9uU3RhcnRUaW1lLAogICAgICAgIGFzeW5jQWN0aW9uQ29tcGxldGlvblRpbWUsCiAgICAgICAgYXN5bmNBY3Rpb25EdXJhdGlvbiwKICAgICAgICBhZGRpdGlvbmFsV2FpdGluZ1RpbWUsCiAgICAgICAgX2FyZ3MgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIG1pbmltdW1UaW1lTXMgPSBfYXJncy5sZW5ndGggPiAxICYmIF9hcmdzWzFdICE9PSB1bmRlZmluZWQgPyBfYXJnc1sxXSA6IERFRkFVTFRfTUlOSU1VTV9USU1FX01TOwogICAgICAgICAgICAvLyBodHRwczovL2tpYmFuYS1jaS5lbGFzdGljLmNvL2pvYi9lbGFzdGljK2tpYmFuYSs2LngrbXVsdGlqb2ItaW50YWtlLzEyOC9jb25zb2xlCiAgICAgICAgICAgIC8vIFdlJ3JlIGhhdmluZyBwZXJpb2RpYyBmYWlsdXJlcyBhcm91bmQgdGhlIHRpbWluZyBoZXJlLiBJJ20gbm90IGV4YWN0bHkgc3VyZQogICAgICAgICAgICAvLyB3aHkgaXQncyBub3QgY29uc2lzdGVudCBidXQgSSdtIGdvaW5nIHRvIGFkZCBzb21lIGJ1ZmZlciBzcGFjZSBoZXJlIHRvCiAgICAgICAgICAgIC8vIHByZXZlbnQgdGhlc2UgcmFuZG9tIGZhaWx1cmVzCiAgICAgICAgICAgIGJ1ZmZlcmVkTWluaW11bVRpbWVNcyA9IG1pbmltdW1UaW1lTXMgKyA1OyAvLyBCbG9jayBvbiB0aGUgYXN5bmMgYWN0aW9uIGFuZCBzdGFydCB0aGUgY2xvY2suCgogICAgICAgICAgICBhc3luY0FjdGlvblN0YXJ0VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwoKICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHByb21pc2VPclByb21pc2VzKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VPclByb21pc2VzKTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIHJldHVyblZhbHVlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgcmV0dXJuIHByb21pc2VPclByb21pc2VzOwoKICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIHJldHVyblZhbHVlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAvLyBNZWFzdXJlIGhvdyBsb25nIHRoZSBhc3luYyBhY3Rpb24gdG9vayB0byBjb21wbGV0ZS4KICAgICAgICAgICAgYXN5bmNBY3Rpb25Db21wbGV0aW9uVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgICAgICAgICBhc3luY0FjdGlvbkR1cmF0aW9uID0gYXN5bmNBY3Rpb25Db21wbGV0aW9uVGltZSAtIGFzeW5jQWN0aW9uU3RhcnRUaW1lOyAvLyBXYWl0IGxvbmdlciBpZiB0aGUgYXN5bmMgYWN0aW9uIGNvbXBsZXRlZCB0b28gcXVpY2tseS4KCiAgICAgICAgICAgIGlmICghKGFzeW5jQWN0aW9uRHVyYXRpb24gPCBidWZmZXJlZE1pbmltdW1UaW1lTXMpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE4OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBhZGRpdGlvbmFsV2FpdGluZ1RpbWUgPSBidWZmZXJlZE1pbmltdW1UaW1lTXMgLSAoYXN5bmNBY3Rpb25Db21wbGV0aW9uVGltZSAtIGFzeW5jQWN0aW9uU3RhcnRUaW1lKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE4OwogICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgICByZXR1cm4gc2V0VGltZW91dChyZXNvbHZlLCBhZGRpdGlvbmFsV2FpdGluZ1RpbWUpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXR1cm5WYWx1ZSk7CgogICAgICAgICAgY2FzZSAxOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9lbnN1cmVNaW5pbXVtVGltZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9"},null]}