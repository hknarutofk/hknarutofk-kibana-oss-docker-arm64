{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/fixed_scroll.js","dependencies":[{"path":"src/legacy/ui/public/fixed_scroll.js","mtime":1572296412092},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9qcXVlcnkgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImpxdWVyeSIpKTsKCnZhciBfbG9kYXNoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJsb2Rhc2giKSk7Cgp2YXIgX21vZHVsZXMgPSByZXF1aXJlKCIuL21vZHVsZXMiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KdmFyIFNDUk9MTEVSX0hFSUdIVCA9IDIwOwovKioKICogVGhpcyBkaXJlY3RpdmUgYWRkcyBhIGZpeGVkIGhvcml6b250YWwgc2Nyb2xsYmFyIHRvIHRoZSBib3R0b20gb2YgdGhlIHdpbmRvdyB0aGF0IHByb3hpZXMgaXRzIHNjcm9sbCBldmVudHMKICogdG8gdGhlIHRhcmdldCBlbGVtZW50J3MgcmVhbCBzY3JvbGxiYXIuIFRoaXMgaXMgdXNlZnVsIHdoZW4gdGhlIHRhcmdldCBlbGVtZW50J3MgaG9yaXpvbnRhbCBzY3JvbGxiYXIKICogbWlnaHQgYmUgd2FhYWF5IGRvd24gdGhlIHBhZ2UsIGxpa2UgdGhlIGRvYyB0YWJsZSBvbiBEaXNjb3Zlci4KICovCgpfbW9kdWxlcy51aU1vZHVsZXMuZ2V0KCdraWJhbmEnKS5kaXJlY3RpdmUoJ2ZpeGVkU2Nyb2xsJywgZnVuY3Rpb24gKGRlYm91bmNlKSB7CiAgcmV0dXJuIHsKICAgIHJlc3RyaWN0OiAnQScsCiAgICBsaW5rOiBmdW5jdGlvbiBsaW5rKCRzY29wZSwgJGVsKSB7CiAgICAgIHZhciAkd2luZG93ID0gKDAsIF9qcXVlcnkuZGVmYXVsdCkod2luZG93KTsKICAgICAgdmFyICRzY3JvbGxlciA9ICgwLCBfanF1ZXJ5LmRlZmF1bHQpKCc8ZGl2IGNsYXNzPSJmaXhlZC1zY3JvbGwtc2Nyb2xsZXIiPicpLmhlaWdodChTQ1JPTExFUl9IRUlHSFQpOwogICAgICAvKioKICAgICAgKiBSZW1vdmUgdGhlIGxpc3RlbmVycyBib3VuZCBpbiBsaXN0ZW4oKQogICAgICAqIEB0eXBlIHtmdW5jdGlvbn0KICAgICAgKi8KCiAgICAgIHZhciB1bmxpc3RlbiA9IF9sb2Rhc2guZGVmYXVsdC5ub29wOwogICAgICAvKioKICAgICAgKiBMaXN0ZW4gZm9yIHNjcm9sbCBldmVudHMgb24gdGhlICRzY3JvbGxlciBhbmQgdGhlICRlbCwgc2V0cyB1bmxpc3RlbigpCiAgICAgICoKICAgICAgKiB1bmxpc3RlbiBtdXN0IGJlIGNhbGxlZCBiZWZvcmUgY2FsbGluZyBvciBsaXN0ZW4oKSB3aWxsIHRocm93IGFuIEVycm9yCiAgICAgICoKICAgICAgKiBTaW5jZSB0aGUgYnJvd3NlciBlbWl0cyAic2Nyb2xsIiBldmVudHMgYWZ0ZXIgc2V0dGluZyBzY3JvbGxMZWZ0CiAgICAgICogdGhlIGxpc3RlbmVycyBhbHNvIHByZXZlbnQgdHVnLW9mLXdhcgogICAgICAqCiAgICAgICogQHRocm93cyB7RXJyb3J9IElmIHVubGlzdGVuIHdhcyBub3QgY2FsbGVkIGZpcnN0CiAgICAgICogQHJldHVybiB7dW5kZWZpbmVkfQogICAgICAqLwoKICAgICAgZnVuY3Rpb24gbGlzdGVuKCkgewogICAgICAgIGlmICh1bmxpc3RlbiAhPT0gX2xvZGFzaC5kZWZhdWx0Lm5vb3ApIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcignZml4ZWRTY3JvbGwgbGlzdGVuZXJzIHdlcmUgbm90IGNsZWFuZWQgdXAgcHJvcGVybHkgYmVmb3JlIHJlLWxpc3RlbmluZyEnKTsKICAgICAgICB9CgogICAgICAgIHZhciBibG9ja1RvOwoKICAgICAgICBmdW5jdGlvbiBiaW5kKCRmcm9tLCAkdG8pIHsKICAgICAgICAgIGZ1bmN0aW9uIGhhbmRsZXIoKSB7CiAgICAgICAgICAgIGlmIChibG9ja1RvID09PSAkdG8pIHJldHVybiBibG9ja1RvID0gbnVsbDsKICAgICAgICAgICAgJHRvLnNjcm9sbExlZnQoKGJsb2NrVG8gPSAkZnJvbSkuc2Nyb2xsTGVmdCgpKTsKICAgICAgICAgIH0KCiAgICAgICAgICAkZnJvbS5vbignc2Nyb2xsJywgaGFuZGxlcik7CiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkZnJvbS5vZmYoJ3Njcm9sbCcsIGhhbmRsZXIpOwogICAgICAgICAgfTsKICAgICAgICB9CgogICAgICAgIHVubGlzdGVuID0gX2xvZGFzaC5kZWZhdWx0LmZsb3coYmluZCgkZWwsICRzY3JvbGxlciksIGJpbmQoJHNjcm9sbGVyLCAkZWwpLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICB1bmxpc3RlbiA9IF9sb2Rhc2guZGVmYXVsdC5ub29wOwogICAgICAgIH0pOwogICAgICB9CiAgICAgIC8qKgogICAgICAqIFJldmVydCBET00gY2hhbmdlcyBhbmQgZXZlbnQgbGlzdGVuZXJzCiAgICAgICogQHJldHVybiB7dW5kZWZpbmVkfQogICAgICAqLwoKCiAgICAgIGZ1bmN0aW9uIGNsZWFuVXAoKSB7CiAgICAgICAgdW5saXN0ZW4oKTsKICAgICAgICAkc2Nyb2xsZXIuZGV0YWNoKCk7CiAgICAgICAgJGVsLmNzcygncGFkZGluZy1ib3R0b20nLCAwKTsKICAgICAgfQogICAgICAvKioKICAgICAgKiBNb2RpZnkgdGhlIERPTSBhbmQgYXR0YWNoIGV2ZW50IGxpc3RlbmVycyBiYXNlZCBvbiBuZWVkLgogICAgICAqIElzIGNhbGxlZCBtYW55IHRpbWVzIHRvIHJlLXNldHVwLCBtdXN0IGJlIGlkZW1wb3RlbnQKICAgICAgKiBAcmV0dXJuIHt1bmRlZmluZWR9CiAgICAgICovCgoKICAgICAgZnVuY3Rpb24gc2V0dXAoKSB7CiAgICAgICAgY2xlYW5VcCgpOwogICAgICAgIHZhciBjb250YWluZXJXaWR0aCA9ICRlbC53aWR0aCgpOwogICAgICAgIHZhciBjb250ZW50V2lkdGggPSAkZWwucHJvcCgnc2Nyb2xsV2lkdGgnKTsKICAgICAgICB2YXIgY29udGFpbmVySG9yaXpPdmVyZmxvdyA9IGNvbnRlbnRXaWR0aCAtIGNvbnRhaW5lcldpZHRoOwogICAgICAgIHZhciBlbFRvcCA9ICRlbC5vZmZzZXQoKS50b3AgLSAkd2luZG93LnNjcm9sbFRvcCgpOwogICAgICAgIHZhciBlbEJvdHRvbSA9IGVsVG9wICsgJGVsLmhlaWdodCgpOwogICAgICAgIHZhciB3aW5kb3dWZXJ0T3ZlcmZsb3cgPSBlbEJvdHRvbSAtICR3aW5kb3cuaGVpZ2h0KCk7CiAgICAgICAgdmFyIHJlcXVpcmVTY3JvbGxlciA9IGNvbnRhaW5lckhvcml6T3ZlcmZsb3cgPiAwICYmIHdpbmRvd1ZlcnRPdmVyZmxvdyA+IDA7CiAgICAgICAgaWYgKCFyZXF1aXJlU2Nyb2xsZXIpIHJldHVybjsgLy8gcHVzaCB0aGUgY29udGVudCBhd2F5IGZyb20gdGhlIHNjcm9sbGVyCgogICAgICAgICRlbC5jc3MoJ3BhZGRpbmctYm90dG9tJywgU0NST0xMRVJfSEVJR0hUKTsgLy8gZmlsbCB0aGUgc2Nyb2xsZXIgd2l0aCBhIGR1bW15IGVsZW1lbnQgdGhhdCBtaW1pY3MgdGhlIGNvbnRlbnQKCiAgICAgICAgJHNjcm9sbGVyLndpZHRoKGNvbnRhaW5lcldpZHRoKS5odG1sKCgwLCBfanF1ZXJ5LmRlZmF1bHQpKCc8ZGl2PicpLmNzcyh7CiAgICAgICAgICB3aWR0aDogY29udGVudFdpZHRoLAogICAgICAgICAgaGVpZ2h0OiBTQ1JPTExFUl9IRUlHSFQKICAgICAgICB9KSkuaW5zZXJ0QWZ0ZXIoJGVsKTsgLy8gbGlzdGVuIGZvciBzY3JvbGwgZXZlbnRzCgogICAgICAgIGxpc3RlbigpOwogICAgICB9CgogICAgICB2YXIgd2lkdGg7CiAgICAgIHZhciBzY3JvbGxXaWR0aDsKCiAgICAgIGZ1bmN0aW9uIGNoZWNrV2lkdGgoKSB7CiAgICAgICAgdmFyIG5ld1Njcm9sbFdpZHRoID0gJGVsLnByb3AoJ3Njcm9sbFdpZHRoJyk7CiAgICAgICAgdmFyIG5ld1dpZHRoID0gJGVsLndpZHRoKCk7CgogICAgICAgIGlmIChzY3JvbGxXaWR0aCAhPT0gbmV3U2Nyb2xsV2lkdGggfHwgd2lkdGggIT09IG5ld1dpZHRoKSB7CiAgICAgICAgICAkc2NvcGUuJGFwcGx5KHNldHVwKTsKICAgICAgICAgIHNjcm9sbFdpZHRoID0gbmV3U2Nyb2xsV2lkdGg7CiAgICAgICAgICB3aWR0aCA9IG5ld1dpZHRoOwogICAgICAgIH0KICAgICAgfQoKICAgICAgdmFyIGRlYm91bmNlZENoZWNrV2lkdGggPSBkZWJvdW5jZShjaGVja1dpZHRoLCAxMDAsIHsKICAgICAgICBpbnZva2VBcHBseTogZmFsc2UKICAgICAgfSk7CiAgICAgICRzY29wZS4kd2F0Y2goZGVib3VuY2VkQ2hlY2tXaWR0aCk7IC8vIGNsZWFudXAgd2hlbiB0aGUgc2NvcGUgaXMgZGVzdHJveWVkCgogICAgICAkc2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uICgpIHsKICAgICAgICBjbGVhblVwKCk7CiAgICAgICAgZGVib3VuY2VkQ2hlY2tXaWR0aC5jYW5jZWwoKTsKICAgICAgICAkc2Nyb2xsZXIgPSAkd2luZG93ID0gbnVsbDsKICAgICAgfSk7CiAgICB9CiAgfTsKfSk7"},null]}