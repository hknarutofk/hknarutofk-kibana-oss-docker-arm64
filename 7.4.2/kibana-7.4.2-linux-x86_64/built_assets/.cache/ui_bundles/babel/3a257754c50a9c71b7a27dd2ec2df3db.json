{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/utils/simple_emitter.js","dependencies":[{"path":"src/legacy/ui/public/utils/simple_emitter.js","mtime":1572296413112},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlNpbXBsZUVtaXR0ZXIgPSBTaW1wbGVFbWl0dGVyOwoKdmFyIF9sb2Rhc2ggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImxvZGFzaCIpKTsKCnZhciBfYmFzZV9vYmplY3QgPSByZXF1aXJlKCIuL2Jhc2Vfb2JqZWN0Iik7Cgp2YXIgX2xlZ2FjeV9jbGFzcyA9IHJlcXVpcmUoIi4vbGVnYWN5X2NsYXNzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCgovKioKICogU2ltcGxlIGV2ZW50IGVtaXR0ZXIgY2xhc3MgdXNlZCBpbiB0aGUgdmlzbGliLiBDYWxscwogKiBoYW5kbGVycyBzeW5jaHJvbm91c2x5IGFuZCBpbXBsZW1lbnRzIGEgY2hhaW5hYmxlIGFwaQogKgogKiBAY2xhc3MKICovCigwLCBfbGVnYWN5X2NsYXNzLmNyZWF0ZUxlZ2FjeUNsYXNzKShTaW1wbGVFbWl0dGVyKS5pbmhlcml0cyhfYmFzZV9vYmplY3QuQmFzZU9iamVjdCk7CgpmdW5jdGlvbiBTaW1wbGVFbWl0dGVyKCkgewogIHRoaXMuX2xpc3RlbmVycyA9IHt9Owp9Ci8qKgogKiBBZGQgYW4gZXZlbnQgaGFuZGxlcgogKgogKiBAcGFyYW0gIHtzdHJpbmd9IG5hbWUKICogQHBhcmFtICB7ZnVuY3Rpb259IGhhbmRsZXIKICogQHJldHVybiB7U2ltcGxlRW1pdHRlcn0gLSB0aGlzLCBmb3IgY2hhaW5pbmcKICovCgoKU2ltcGxlRW1pdHRlci5wcm90b3R5cGUub24gPSBmdW5jdGlvbiAobmFtZSwgaGFuZGxlcikgewogIHZhciBoYW5kbGVycyA9IHRoaXMuX2xpc3RlbmVyc1tuYW1lXTsKICBpZiAoIWhhbmRsZXJzKSBoYW5kbGVycyA9IHRoaXMuX2xpc3RlbmVyc1tuYW1lXSA9IFtdOwogIGhhbmRsZXJzLnB1c2goaGFuZGxlcik7CiAgcmV0dXJuIHRoaXM7Cn07Ci8qKgogKiBSZW1vdmUgYW4gZXZlbnQgaGFuZGxlcgogKgogKiBAcGFyYW0gIHtzdHJpbmd9IG5hbWUKICogQHBhcmFtICB7ZnVuY3Rpb259IFtoYW5kbGVyXSAtIG9wdGlvbmFsIGhhbmRsZXIgdG8gcmVtb3ZlLCBpZiBubyBoYW5kbGVyIGlzCiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzc2VkIHRoZW4gYWxsIGFyZSByZW1vdmVkCiAqIEByZXR1cm4ge1NpbXBsZUVtaXR0ZXJ9IC0gdGhpcywgZm9yIGNoYWluaW5nCiAqLwoKClNpbXBsZUVtaXR0ZXIucHJvdG90eXBlLm9mZiA9IGZ1bmN0aW9uIChuYW1lLCBoYW5kbGVyKSB7CiAgaWYgKCF0aGlzLl9saXN0ZW5lcnNbbmFtZV0pIHsKICAgIHJldHVybiB0aGlzOwogIH0gLy8gcmVtb3ZlIGEgc3BlY2lmaWMgaGFuZGxlcgoKCiAgaWYgKGhhbmRsZXIpIF9sb2Rhc2guZGVmYXVsdC5wdWxsKHRoaXMuX2xpc3RlbmVyc1tuYW1lXSwgaGFuZGxlcik7IC8vIG9yIHJlbW92ZSBhbGwgbGlzdGVuZXJzCiAgZWxzZSB0aGlzLl9saXN0ZW5lcnNbbmFtZV0gPSBudWxsOwogIHJldHVybiB0aGlzOwp9OwovKioKICogUmVtb3ZlIGFsbCBldmVudCBsaXN0ZW5lcnMgYm91bmQgdG8gdGhpcyBlbWl0dGVyLgogKgogKiBAcmV0dXJuIHtTaW1wbGVFbWl0dGVyfSAtIHRoaXMsIGZvciBjaGFpbmluZwogKi8KCgpTaW1wbGVFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7CiAgdGhpcy5fbGlzdGVuZXJzID0ge307CiAgcmV0dXJuIHRoaXM7Cn07Ci8qKgogKiBFbWl0IGFuIGV2ZW50IGFuZCBhbGwgYXJndW1lbnRzIHRvIGFsbCBsaXN0ZW5lcnMgZm9yIGFuIGV2ZW50IG5hbWUKICoKICogQHBhcmFtICB7c3RyaW5nfSBuYW1lCiAqIEBwYXJhbSAgeyp9IFthcmcuLi5dIC0gYW55IG51bWJlciBvZiBhcmd1bWVudHMgdGhhdCB3aWxsIGJlIGFwcGxpZWQgdG8gZWFjaCBoYW5kbGVyCiAqIEByZXR1cm4ge1NpbXBsZUVtaXR0ZXJ9IC0gdGhpcywgZm9yIGNoYWluaW5nCiAqLwoKClNpbXBsZUVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBfbG9kYXNoLmRlZmF1bHQucmVzdFBhcmFtKGZ1bmN0aW9uIChuYW1lLCBhcmdzKSB7CiAgaWYgKCF0aGlzLl9saXN0ZW5lcnNbbmFtZV0pIHJldHVybiB0aGlzOwogIHZhciBsaXN0ZW5lcnMgPSB0aGlzLmxpc3RlbmVycyhuYW1lKTsKICB2YXIgaSA9IC0xOwoKICB3aGlsZSAoKytpIDwgbGlzdGVuZXJzLmxlbmd0aCkgewogICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpOwogIH0KCiAgcmV0dXJuIHRoaXM7Cn0pOwovKioKICogR2V0IGEgbGlzdCBvZiB0aGUgZXZlbnQgbmFtZXMgdGhhdCBjdXJyZW50bHkgaGF2ZSBsaXN0ZW5lcnMKICoKICogQHJldHVybiB7YXJyYXlbc3RyaW5nXX0KICovCgpTaW1wbGVFbWl0dGVyLnByb3RvdHlwZS5hY3RpdmVFdmVudHMgPSBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIF9sb2Rhc2guZGVmYXVsdC5yZWR1Y2UodGhpcy5fbGlzdGVuZXJzLCBmdW5jdGlvbiAoYWN0aXZlLCBsaXN0ZW5lcnMsIG5hbWUpIHsKICAgIHJldHVybiBhY3RpdmUuY29uY2F0KF9sb2Rhc2guZGVmYXVsdC5zaXplKGxpc3RlbmVycykgPyBuYW1lIDogW10pOwogIH0sIFtdKTsKfTsKLyoqCiAqIEdldCBhIGxpc3Qgb2YgdGhlIGhhbmRsZXIgZnVuY3Rpb25zIGZvciBhIHNwZWNpZmljIGV2ZW50CiAqCiAqIEBwYXJhbSAge3N0cmluZ30gbmFtZQogKiBAcmV0dXJuIHthcnJheVtmdW5jdGlvbl19CiAqLwoKClNpbXBsZUVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7CiAgcmV0dXJuIHRoaXMuX2xpc3RlbmVyc1tuYW1lXSA/IHRoaXMuX2xpc3RlbmVyc1tuYW1lXS5zbGljZSgwKSA6IFtdOwp9OwovKioKICogR2V0IHRoZSBjb3VudCBvZiBoYW5kbGVycyBmb3IgYSBzcGVjaWZpYyBldmVudAogKgogKiBAcGFyYW0gIHtzdHJpbmd9IFtuYW1lXSAtIG9wdGlvbmFsIGV2ZW50IG5hbWUgdG8gZmlsdGVyIGJ5CiAqIEByZXR1cm4ge251bWJlcn0KICovCgoKU2ltcGxlRW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJDb3VudCA9IGZ1bmN0aW9uIChuYW1lKSB7CiAgaWYgKG5hbWUpIHsKICAgIHJldHVybiBfbG9kYXNoLmRlZmF1bHQuc2l6ZSh0aGlzLl9saXN0ZW5lcnNbbmFtZV0pOwogIH0KCiAgcmV0dXJuIF9sb2Rhc2guZGVmYXVsdC5yZWR1Y2UodGhpcy5fbGlzdGVuZXJzLCBmdW5jdGlvbiAoY291bnQsIGhhbmRsZXJzKSB7CiAgICByZXR1cm4gY291bnQgKyBfbG9kYXNoLmRlZmF1bHQuc2l6ZShoYW5kbGVycyk7CiAgfSwgMCk7Cn07"},null]}