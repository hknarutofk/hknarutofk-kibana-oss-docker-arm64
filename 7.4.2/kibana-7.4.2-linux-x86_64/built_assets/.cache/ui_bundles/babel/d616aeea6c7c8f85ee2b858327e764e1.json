{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/metrics/public/lib/fetch_fields.js","dependencies":[{"path":"src/legacy/core_plugins/metrics/public/lib/fetch_fields.js","mtime":1572296411100},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmZldGNoRmllbGRzID0gZmV0Y2hGaWVsZHM7CmV4cG9ydHMuZmV0Y2hJbmRleFBhdHRlcm5GaWVsZHMgPSBmZXRjaEluZGV4UGF0dGVybkZpZWxkczsKCnZhciBfa2ZldGNoID0gcmVxdWlyZSgidWkva2ZldGNoIik7Cgp2YXIgX25vdGlmeSA9IHJlcXVpcmUoInVpL25vdGlmeSIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX2V4dHJhY3RfaW5kZXhfcGF0dGVybnMgPSByZXF1aXJlKCIuLi8uLi9jb21tb24vZXh0cmFjdF9pbmRleF9wYXR0ZXJucyIpOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgeyB0cnkgeyB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7IHZhciB2YWx1ZSA9IGluZm8udmFsdWU7IH0gY2F0Y2ggKGVycm9yKSB7IHJlamVjdChlcnJvcik7IHJldHVybjsgfSBpZiAoaW5mby5kb25lKSB7IHJlc29sdmUodmFsdWUpOyB9IGVsc2UgeyBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7IH0gfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7IGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7IH0gZnVuY3Rpb24gX3Rocm93KGVycikgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH0KCmZ1bmN0aW9uIGZldGNoRmllbGRzKCkgewogIHJldHVybiBfZmV0Y2hGaWVsZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2ZldGNoRmllbGRzKCkgewogIF9mZXRjaEZpZWxkcyA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgdmFyIGluZGV4UGF0dGVybnMsCiAgICAgICAgcGF0dGVybnMsCiAgICAgICAgaW5kZXhGaWVsZHMsCiAgICAgICAgZmllbGRzLAogICAgICAgIF9hcmdzID0gYXJndW1lbnRzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBpbmRleFBhdHRlcm5zID0gX2FyZ3MubGVuZ3RoID4gMCAmJiBfYXJnc1swXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3NbMF0gOiBbJyonXTsKICAgICAgICAgICAgcGF0dGVybnMgPSBBcnJheS5pc0FycmF5KGluZGV4UGF0dGVybnMpID8gaW5kZXhQYXR0ZXJucyA6IFtpbmRleFBhdHRlcm5zXTsKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDI7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocGF0dGVybnMubWFwKGZ1bmN0aW9uIChwYXR0ZXJuKSB7CiAgICAgICAgICAgICAgcmV0dXJuICgwLCBfa2ZldGNoLmtmZXRjaCkoewogICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgICAgICAgICAgIHBhdGhuYW1lOiAnL2FwaS9tZXRyaWNzL2ZpZWxkcycsCiAgICAgICAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICAgICAgICBpbmRleDogcGF0dGVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KSk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBpbmRleEZpZWxkcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIGZpZWxkcyA9IHBhdHRlcm5zLnJlZHVjZShmdW5jdGlvbiAoY3VtdWxhdGVkRmllbGRzLCBjdXJyZW50UGF0dGVybiwgaW5kZXgpIHsKICAgICAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgY3VtdWxhdGVkRmllbGRzLCBfZGVmaW5lUHJvcGVydHkoe30sIGN1cnJlbnRQYXR0ZXJuLCBpbmRleEZpZWxkc1tpbmRleF0pKTsKICAgICAgICAgICAgfSwge30pOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmaWVsZHMpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgyKTsKCiAgICAgICAgICAgIF9ub3RpZnkudG9hc3ROb3RpZmljYXRpb25zLmFkZERhbmdlcih7CiAgICAgICAgICAgICAgdGl0bGU6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd0c3ZiLmZldGNoRmllbGRzLmxvYWRJbmRleFBhdHRlcm5GaWVsZHNFcnJvck1lc3NhZ2UnLCB7CiAgICAgICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ1VuYWJsZSB0byBsb2FkIGluZGV4X3BhdHRlcm4gZmllbGRzJwogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIHRleHQ6IF9jb250ZXh0LnQwLm1lc3NhZ2UKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzIsIDEwXV0pOwogIH0pKTsKICByZXR1cm4gX2ZldGNoRmllbGRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGZldGNoSW5kZXhQYXR0ZXJuRmllbGRzKF94KSB7CiAgcmV0dXJuIF9mZXRjaEluZGV4UGF0dGVybkZpZWxkcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZmV0Y2hJbmRleFBhdHRlcm5GaWVsZHMoKSB7CiAgX2ZldGNoSW5kZXhQYXR0ZXJuRmllbGRzID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKF9yZWYpIHsKICAgIHZhciBwYXJhbXMsIF9yZWYkZmllbGRzLCBmaWVsZHMsIGluZGV4UGF0dGVybnM7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgcGFyYW1zID0gX3JlZi5wYXJhbXMsIF9yZWYkZmllbGRzID0gX3JlZi5maWVsZHMsIGZpZWxkcyA9IF9yZWYkZmllbGRzID09PSB2b2lkIDAgPyB7fSA6IF9yZWYkZmllbGRzOwogICAgICAgICAgICBpbmRleFBhdHRlcm5zID0gKDAsIF9leHRyYWN0X2luZGV4X3BhdHRlcm5zLmV4dHJhY3RJbmRleFBhdHRlcm5zKShwYXJhbXMsIGZpZWxkcyk7CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGZldGNoRmllbGRzKGluZGV4UGF0dGVybnMpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0Mi5zZW50KTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSk7CiAgcmV0dXJuIF9mZXRjaEluZGV4UGF0dGVybkZpZWxkcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9"},null]}