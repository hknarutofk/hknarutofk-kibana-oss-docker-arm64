{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/flot-charts/jquery.flot.log.js","dependencies":[{"path":"src/legacy/ui/public/flot-charts/jquery.flot.log.js","mtime":1572296412748},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKLyogQG5vdGljZQogKgogKiBQcmV0dHkgaGFuZGxpbmcgb2YgbG9nYXJpdGhtaWMgYXhlcy4KICogQ29weXJpZ2h0IChjKSAyMDA3LTIwMTQgSU9MQSBhbmQgT2xlIExhdXJzZW4uCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogQ3JlYXRlZCBieSBBcm5lIGRlIExhYXQKICogU2V0IGF4aXMubW9kZSB0byAibG9nIiBhbmQgbWFrZSB0aGUgYXhpcyBsb2dhcml0aG1pYyB1c2luZyB0cmFuc2Zvcm06CiAqICAgICBheGlzOiB7CiAqICAgICAgICAgbW9kZTogJ2xvZycsCiAqICAgICAgICAgdHJhbnNmb3JtOiBmdW5jdGlvbih2KSB7diA8PSAwID8gTWF0aC5sb2codikgLyBNYXRoLkxOMTAgOiBudWxsfSwKICogICAgICAgICBpbnZlcnNlVHJhbnNmb3JtOiBmdW5jdGlvbih2KSB7TWF0aC5wb3coMTAsIHYpfQogKiAgICAgfQogKiBUaGUgdHJhbnNmb3JtIGZpbHRlcnMgbmVnYXRpdmUgYW5kIHplcm8gdmFsdWVzLCBiZWNhdXNlIHRob3NlIGFyZQogKiBpbnZhbGlkIG9uIGxvZ2FyaXRobWljIHNjYWxlcy4KICogVGhpcyBwbHVnaW4gdHJpZXMgdG8gY3JlYXRlIGdvb2QgbG9va2luZyBsb2dhcml0aG1pYyB0aWNrcywgdXNpbmcKICogdW5pY29kZSBzdXBlcnNjcmlwdCBjaGFyYWN0ZXJzLiBJZiBhbGwgZGF0YSB0byBiZSBwbG90dGVkIGlzIGJldHdlZW4gdHdvCiAqIHBvd2VycyBvZiB0ZW4gdGhlbiB0aGUgZGVmYXVsdCBmbG90IHRpY2sgZ2VuZXJhdG9yIGFuZCByZW5kZXJlciBhcmUKICogdXNlZC4gTG9nYXJpdGhtaWMgdGlja3MgYXJlIHBsYWNlcyBhdCBwb3dlcnMgb2YgdGVuIGFuZCBhdCBoYWxmIHRob3NlCiAqIHZhbHVlcyBpZiB0aGVyZSBhcmUgbm90IHRvIG1hbnkgdGlja3MgYWxyZWFkeSAoZS5nLiBbMSwgNSwgMTAsIDUwLCAxMDBdKS4KICogRm9yIGRldGFpbHMsICBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2Zsb3QvZmxvdC9wdWxsLzEzMjgKKi8KKGZ1bmN0aW9uICgkKSB7CiAgZnVuY3Rpb24gbG9nMTAodmFsdWUpIHsKICAgIC8qIEdldCB0aGUgTG9nMTAgb2YgdGhlIHZhbHVlCiAgICAqLwogICAgcmV0dXJuIE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4xMDsKICB9CgogIGZ1bmN0aW9uIGZsb29yQXNMb2cxMCh2YWx1ZSkgewogICAgLyogR2V0IHBvd2VyIG9mIHRoZSBmaXJzdCBwb3dlciBvZiAxMCBiZWxvdyB0aGUgdmFsdWUKICAgICovCiAgICByZXR1cm4gTWF0aC5mbG9vcihsb2cxMCh2YWx1ZSkpOwogIH0KCiAgZnVuY3Rpb24gY2VpbEFzTG9nMTAodmFsdWUpIHsKICAgIC8qIEdldCBwb3dlciBvZiB0aGUgZmlyc3QgcG93ZXIgb2YgMTAgYWJvdmUgdGhlIHZhbHVlCiAgICAqLwogICAgcmV0dXJuIE1hdGguY2VpbChsb2cxMCh2YWx1ZSkpOwogIH0gLy8gcm91bmQgdG8gbmVhcmJ5IGxvd2VyIG11bHRpcGxlIG9mIGJhc2UKCgogIGZ1bmN0aW9uIGZsb29ySW5CYXNlKG4sIGJhc2UpIHsKICAgIHJldHVybiBiYXNlICogTWF0aC5mbG9vcihuIC8gYmFzZSk7CiAgfQoKICBmdW5jdGlvbiBnZXRVbmljb2RlUG93ZXIocG93ZXIpIHsKICAgIHZhciBzdXBlcnNjcmlwdHMgPSBbIuKBsCIsICLCuSIsICLCsiIsICLCsyIsICLigbQiLCAi4oG1IiwgIuKBtiIsICLigbciLCAi4oG4IiwgIuKBuSJdLAogICAgICAgIHJlc3VsdCA9ICIiLAogICAgICAgIHN0cl9wb3dlciA9ICIiICsgcG93ZXI7CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHJfcG93ZXIubGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKHN0cl9wb3dlcltpXSA9PT0gIisiKSB7fSBlbHNlIGlmIChzdHJfcG93ZXJbaV0gPT09ICItIikgewogICAgICAgIHJlc3VsdCArPSAi4oG7IjsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQgKz0gc3VwZXJzY3JpcHRzW3N0cl9wb3dlcltpXV07CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gcmVzdWx0OwogIH0KCiAgZnVuY3Rpb24gaW5pdChwbG90KSB7CiAgICBwbG90Lmhvb2tzLnByb2Nlc3NPcHRpb25zLnB1c2goZnVuY3Rpb24gKHBsb3QpIHsKICAgICAgJC5lYWNoKHBsb3QuZ2V0QXhlcygpLCBmdW5jdGlvbiAoYXhpc05hbWUsIGF4aXMpIHsKICAgICAgICB2YXIgb3B0cyA9IGF4aXMub3B0aW9uczsKCiAgICAgICAgaWYgKG9wdHMubW9kZSA9PT0gImxvZyIpIHsKICAgICAgICAgIGF4aXMudGlja0dlbmVyYXRvciA9IGZ1bmN0aW9uIChheGlzKSB7CiAgICAgICAgICAgIHZhciB0aWNrcyA9IFtdLAogICAgICAgICAgICAgICAgZW5kID0gY2VpbEFzTG9nMTAoYXhpcy5tYXgpLAogICAgICAgICAgICAgICAgc3RhcnQgPSBmbG9vckFzTG9nMTAoYXhpcy5taW4pLAogICAgICAgICAgICAgICAgdGljayA9IE51bWJlci5OYU4sCiAgICAgICAgICAgICAgICBpID0gMDsKCiAgICAgICAgICAgIGlmIChheGlzLm1pbiA9PT0gbnVsbCB8fCBheGlzLm1pbiA8PSAwKSB7CiAgICAgICAgICAgICAgLy8gQmFkIG1pbmltdW0sIG1ha2UgdGlja3MgZnJvbSAxICgxMCoqMCkgdG8gbWF4CiAgICAgICAgICAgICAgc3RhcnQgPSAwOwogICAgICAgICAgICAgIGF4aXMubWluID0gMC42OwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoZW5kIDw9IHN0YXJ0KSB7CiAgICAgICAgICAgICAgLy8gU3RhcnQgbGVzcyB0aGFuIGVuZD8hCiAgICAgICAgICAgICAgdGlja3MgPSBbMWUtNiwgMWUtNSwgMWUtNCwgMWUtMywgMWUtMiwgMWUtMSwgMWUwLCAxZTEsIDFlMiwgMWUzLCAxZTQsIDFlNSwgMWU2LCAxZTcsIDFlOCwgMWU5XTsKICAgICAgICAgICAgfSBlbHNlIGlmIChsb2cxMChheGlzLm1heCkgLSBsb2cxMChheGlzLmRhdGFtaW4pIDwgMSkgewogICAgICAgICAgICAgIC8vIERlZmF1bHQgZmxvdCBnZW5lcmF0b3IgaW5jYXNlIG5vIHBvd2VycyBvZiAxMAogICAgICAgICAgICAgIC8vIGFyZSBiZXR3ZWVuIHN0YXJ0IGFuZCBlbmQKICAgICAgICAgICAgICB2YXIgcHJldjsKICAgICAgICAgICAgICBzdGFydCA9IGZsb29ySW5CYXNlKGF4aXMubWluLCBheGlzLnRpY2tTaXplKTsKCiAgICAgICAgICAgICAgZG8gewogICAgICAgICAgICAgICAgcHJldiA9IHRpY2s7CiAgICAgICAgICAgICAgICB0aWNrID0gc3RhcnQgKyBpICogYXhpcy50aWNrU2l6ZTsKICAgICAgICAgICAgICAgIHRpY2tzLnB1c2godGljayk7CiAgICAgICAgICAgICAgICArK2k7CiAgICAgICAgICAgICAgfSB3aGlsZSAodGljayA8IGF4aXMubWF4ICYmIHRpY2sgIT09IHByZXYpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIE1ha2UgdGlja3MgYXQgZWFjaCBwb3dlciBvZiB0ZW4KICAgICAgICAgICAgICBmb3IgKDsgaSA8PSBlbmQgLSBzdGFydDsgaSsrKSB7CiAgICAgICAgICAgICAgICB0aWNrID0gTWF0aC5wb3coMTAsIHN0YXJ0ICsgaSk7CiAgICAgICAgICAgICAgICB0aWNrcy5wdXNoKHRpY2spOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdmFyIGxlbmd0aCA9IHRpY2tzLmxlbmd0aDsgLy8gSWYgbm90IHRvIG1hbnkgdGlja3MgYWxzbyBwdXQgYSB0aWNrIGJldHdlZW4KICAgICAgICAgICAgICAvLyB0aGUgcG93ZXJzIG9mIHRlbgoKICAgICAgICAgICAgICBpZiAoZW5kIC0gc3RhcnQgPCA2KSB7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8IGxlbmd0aCAqIDIgLSAxOyBqICs9IDIpIHsKICAgICAgICAgICAgICAgICAgdGljayA9IHRpY2tzW2ogLSAxXSAqIDU7CiAgICAgICAgICAgICAgICAgIHRpY2tzLnNwbGljZShqLCAwLCB0aWNrKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiB0aWNrczsKICAgICAgICAgIH07CgogICAgICAgICAgYXhpcy50aWNrRm9ybWF0dGVyID0gZnVuY3Rpb24gKHZhbHVlLCBheGlzKSB7CiAgICAgICAgICAgIHZhciBmb3JtYXR0ZWQ7CgogICAgICAgICAgICBpZiAobG9nMTAoYXhpcy5tYXgpIC0gbG9nMTAoYXhpcy5kYXRhbWluKSA8IDEpIHsKICAgICAgICAgICAgICAvLyBEZWZhdWx0IGZsb3QgZm9ybWF0dGVyCiAgICAgICAgICAgICAgdmFyIGZhY3RvciA9IGF4aXMudGlja0RlY2ltYWxzID8gTWF0aC5wb3coMTAsIGF4aXMudGlja0RlY2ltYWxzKSA6IDE7CiAgICAgICAgICAgICAgZm9ybWF0dGVkID0gIiIgKyBNYXRoLnJvdW5kKHZhbHVlICogZmFjdG9yKSAvIGZhY3RvcjsKCiAgICAgICAgICAgICAgaWYgKGF4aXMudGlja0RlY2ltYWxzICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgICB2YXIgZGVjaW1hbCA9IGZvcm1hdHRlZC5pbmRleE9mKCIuIik7CiAgICAgICAgICAgICAgICB2YXIgcHJlY2lzaW9uID0gZGVjaW1hbCA9PT0gLTEgPyAwIDogZm9ybWF0dGVkLmxlbmd0aCAtIGRlY2ltYWwgLSAxOwoKICAgICAgICAgICAgICAgIGlmIChwcmVjaXNpb24gPCBheGlzLnRpY2tEZWNpbWFscykgewogICAgICAgICAgICAgICAgICByZXR1cm4gKHByZWNpc2lvbiA/IGZvcm1hdHRlZCA6IGZvcm1hdHRlZCArICIuIikgKyAoIiIgKyBmYWN0b3IpLnN1YnN0cigxLCBheGlzLnRpY2tEZWNpbWFscyAtIHByZWNpc2lvbik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHZhciBtdWx0aXBsaWVyID0gIiIsCiAgICAgICAgICAgICAgICAgIGV4cG9uZW50aWFsID0gcGFyc2VGbG9hdCh2YWx1ZSkudG9FeHBvbmVudGlhbCgwKSwKICAgICAgICAgICAgICAgICAgcG93ZXIgPSBnZXRVbmljb2RlUG93ZXIoZXhwb25lbnRpYWwuc2xpY2UoMikpOwoKICAgICAgICAgICAgICBpZiAoZXhwb25lbnRpYWxbMF0gIT09ICIxIikgewogICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IGV4cG9uZW50aWFsWzBdICsgIngiOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgZm9ybWF0dGVkID0gbXVsdGlwbGllciArICIxMCIgKyBwb3dlcjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIGZvcm1hdHRlZDsKICAgICAgICAgIH07CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogIH0KCiAgJC5wbG90LnBsdWdpbnMucHVzaCh7CiAgICBpbml0OiBpbml0LAogICAgbmFtZTogImxvZyIsCiAgICB2ZXJzaW9uOiAiMC45IgogIH0pOwp9KShqUXVlcnkpOw=="},null]}