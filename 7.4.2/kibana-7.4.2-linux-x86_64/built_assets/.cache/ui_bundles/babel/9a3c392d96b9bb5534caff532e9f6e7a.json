{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/core/public/application/application_service.js","dependencies":[{"path":"src/core/public/application/application_service.js","mtime":1572296408376},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1572297165884},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1572297178034},{"path":"node_modules/babel-loader/lib/index.js","mtime":1572297165764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkFwcGxpY2F0aW9uU2VydmljZSA9IHZvaWQgMDsKCnZhciBfcnhqcyA9IHJlcXVpcmUoInJ4anMiKTsKCnZhciBfY2FwYWJpbGl0aWVzID0gcmVxdWlyZSgiLi9jYXBhYmlsaXRpZXMiKTsKCmZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsKICB0cnkgewogICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOwogICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsKICB9IGNhdGNoIChlcnJvcikgewogICAgcmVqZWN0KGVycm9yKTsKICAgIHJldHVybjsKICB9CgogIGlmIChpbmZvLmRvbmUpIHsKICAgIHJlc29sdmUodmFsdWUpOwogIH0gZWxzZSB7CiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7CiAgfQp9CgpmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgewogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgc2VsZiA9IHRoaXMsCiAgICAgICAgYXJncyA9IGFyZ3VtZW50czsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsKCiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAibmV4dCIsIHZhbHVlKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikgewogICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgInRocm93IiwgZXJyKTsKICAgICAgfQoKICAgICAgX25leHQodW5kZWZpbmVkKTsKICAgIH0pOwogIH07Cn0KCmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsKICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7CiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSAiW29iamVjdCBBcmd1bWVudHNdIikgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7CiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICBhcnIyW2ldID0gYXJyW2ldOwogICAgfQoKICAgIHJldHVybiBhcnIyOwogIH0KfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOwogICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOwogICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7CiAgfQp9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7CiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOwogIHJldHVybiBDb25zdHJ1Y3RvcjsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KLyoqCiAqIFNlcnZpY2UgdGhhdCBpcyByZXNwb25zaWJsZSBmb3IgcmVnaXN0ZXJpbmcgbmV3IGFwcGxpY2F0aW9ucy4KICogQGludGVybmFsCiAqLwoKCnZhciBBcHBsaWNhdGlvblNlcnZpY2UgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBBcHBsaWNhdGlvblNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXBwbGljYXRpb25TZXJ2aWNlKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImFwcHMkIiwgbmV3IF9yeGpzLkJlaGF2aW9yU3ViamVjdChbXSkpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAibGVnYWN5QXBwcyQiLCBuZXcgX3J4anMuQmVoYXZpb3JTdWJqZWN0KFtdKSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJjYXBhYmlsaXRpZXMiLCBuZXcgX2NhcGFiaWxpdGllcy5DYXBhYmlsaXRpZXNTZXJ2aWNlKCkpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEFwcGxpY2F0aW9uU2VydmljZSwgW3sKICAgIGtleTogInNldHVwIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXR1cCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiB7CiAgICAgICAgcmVnaXN0ZXJBcHA6IGZ1bmN0aW9uIHJlZ2lzdGVyQXBwKGFwcCkgewogICAgICAgICAgX3RoaXMuYXBwcyQubmV4dChbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KF90aGlzLmFwcHMkLnZhbHVlKSwgW2FwcF0pKTsKICAgICAgICB9LAogICAgICAgIHJlZ2lzdGVyTGVnYWN5QXBwOiBmdW5jdGlvbiByZWdpc3RlckxlZ2FjeUFwcChhcHApIHsKICAgICAgICAgIF90aGlzLmxlZ2FjeUFwcHMkLm5leHQoW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShfdGhpcy5sZWdhY3lBcHBzJC52YWx1ZSksIFthcHBdKSk7CiAgICAgICAgfQogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogInN0YXJ0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfc3RhcnQgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF9yZWYpIHsKICAgICAgICB2YXIgaW5qZWN0ZWRNZXRhZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpbmplY3RlZE1ldGFkYXRhID0gX3JlZi5pbmplY3RlZE1ldGFkYXRhOwogICAgICAgICAgICAgICAgdGhpcy5hcHBzJC5jb21wbGV0ZSgpOwogICAgICAgICAgICAgICAgdGhpcy5sZWdhY3lBcHBzJC5jb21wbGV0ZSgpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgdGhpcy5jYXBhYmlsaXRpZXMuc3RhcnQoewogICAgICAgICAgICAgICAgICBhcHBzOiB0aGlzLmFwcHMkLnZhbHVlLAogICAgICAgICAgICAgICAgICBsZWdhY3lBcHBzOiB0aGlzLmxlZ2FjeUFwcHMkLnZhbHVlLAogICAgICAgICAgICAgICAgICBpbmplY3RlZE1ldGFkYXRhOiBpbmplY3RlZE1ldGFkYXRhCiAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBzdGFydChfeCkgewogICAgICAgIHJldHVybiBfc3RhcnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHN0YXJ0OwogICAgfSgpCiAgfSwgewogICAga2V5OiAic3RvcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc3RvcCgpIHt9CiAgfV0pOwoKICByZXR1cm4gQXBwbGljYXRpb25TZXJ2aWNlOwp9KCk7CgpleHBvcnRzLkFwcGxpY2F0aW9uU2VydmljZSA9IEFwcGxpY2F0aW9uU2VydmljZTs="},null]}