"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var react_konva_1 = require("react-konva");
var Grid = /** @class */ (function (_super) {
    __extends(Grid, _super);
    function Grid() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.renderGridLine = function (linePosition, i) {
            var gridLineStyle = _this.props.gridLineStyle;
            return react_1.default.createElement(react_konva_1.Line, __assign({}, gridLineStyle, { key: "tick-" + i, points: linePosition }));
        };
        _this.renderGrid = function () {
            var _a = _this.props, chartDimensions = _a.chartDimensions, linesPositions = _a.linesPositions;
            return (react_1.default.createElement(react_konva_1.Group, { x: chartDimensions.left, y: chartDimensions.top },
                react_1.default.createElement(react_konva_1.Group, { key: "grid-lines" }, linesPositions.map(_this.renderGridLine))));
        };
        return _this;
    }
    Grid.prototype.render = function () {
        return this.renderGrid();
    };
    return Grid;
}(react_1.default.PureComponent));
exports.Grid = Grid;
//# sourceMappingURL=grid.js.map